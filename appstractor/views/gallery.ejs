<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Appstractor Interface</title>
    <link rel="stylesheet" href="/../css/main.css">
    <link rel="stylesheet" href="/../css/iframe.css">
    <link rel="stylesheet" href="/../css/popups.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
</head>
<!-- since iframe and not parent window refreshes, script params needed to keep track of data -->
<div id="length" style="display: none">
    <%= data.length %>
</div>
<!-- used to save unqiue file names on user download -->
<div id="docIDs" style="display: none">
    <!-- adds blank elements at start and end to isolate enter characters -->
    <%  const docIDs = [null];
        for(let i = 0; i <data.length; i++) { 
            docIDs.push(data[i].id);
        } 
        docIDs.push(null) %>
    <%= docIDs %>
</div>
<body>
    <!-- fixed -->
    <div class="nav-container">
        <nav>
            <a href="/appstractor" class="logo-icon">&nbspA&nbsp</a>
            <a href="/appstractor/render">Render</a>    
            <a href="/appstractor/gallery" class="active">Gallery</a>   
            <a href="#">Sign Out</a>
        </nav>
    </div>
    <!-- relative -->
    <div class="filler nav-container"></div>
    <div class="iframe-container" id="canvas">
        <div id="left-arrow"> < </div>
        <div id="right-arrow"> > </div>
        <iframe src="/appstractor/saved_canvas/<%= 0 %>"></iframe>
    </div>
    <div class="filler buttons-container"></div>
    <!-- fixed -->
    <div class="buttons-container">
        <div class="buttons">
            <!-- action route reassigned via jQuery within page script -->
            <form action="/appstractor/saved_canvas/0/?_method=DELETE" method="POST" class="button-form" id="delete-form">
                <button type="submit" class="button" id="delete">
                    <img src="/../images/delete.png" class="button-image">
                    <div class="button-text"> Delete </div>
                </button>
            </form>  
            <!-- action route reassigned via jQuery within page script -->
            <form action="/appstractor/saved_canvas/0" method="POST" class="button-form" id="download-form">
                <button type="submit" class="button center" id="download">
                    <img src="/../images/download.png" class="button-image">
                    <div class="button-text"> Download </div>
                </button>  
            </form>  
            <div class="button" id="edit">
                    <img src="/../images/render.png" class="button-image">
                    <div class="button-text"> Edit </div>
            </div> 
        </div>
    </div>
    <!-- pop up edit panel -->
    <div class="buttons-container" id="edit-panel">
        <div class="buttons">
            <div class="button" id="detail">
                <img src="/../images/detail.png" class="button-image"> 
                <div class="button-text"> Detail </div>
            </div>   
            <div class="button" id="shadow">
                <img src="/../images/shadow.png" class="button-image">
                <div class="button-text"> Shadow </div>
            </div>  
            <!-- action route reassigned via jQuery within page script -->
            <form action='/appstractor/saved_canvas/0/?_method=PUT' method="POST" class="button-form" id='save-form'>
                <!-- value assigned via jQuery within iframe script -->
                <input type="text" name="dom" class="input-hide">
                <button type="submit" class="button" id="save">
                    <img src="/../images/save.png" class="button-image">
                    <div class="button-text"> Save </div>
                </button>
            </form>
        </div>
    </div>
    <!-- absolute bg image -->
    <div class="overlay-color"></div>
    <div class="overlay-image"></div>
    <script>
        class Gallery {
            constructor() {
                this.currentIndex = 0
                // script tracks data length for rendering iframe arrows based on index
                this.dataLength = $('#length').text();
                // script tracks doc ids for unique file naming 
                this.docIDs = $('#docIDs').text().split(',');
            }
            initialize = () => {
                //removes first and last element arrays which store isolated enter characters
                this.docIDs.splice(0,1);
                this.docIDs.pop();
                this.removeDataDivs();
                //disables buttons on load in if gallery is empty
                this.dataLength < 1 ? $('.button',parent.document).css('opacity','.5').css('pointer-events','none') : null;
                this.toggleArrows();    
                this.addEventListeners();
            }
            //removes invisible divs that transfer data to script
            removeDataDivs = () => {
                $('#length').remove();
                $('#docIDs').remove();
            }
            //groups all non destructive update methods
            updateGallery () {
                this.updateFormActions(); 
                this.lockArrows(); 
                this.toggleIframes();
                this.toggleArrows();
            }
            //syncs forms with current iframe index
            updateFormActions () {
                $('#download-form').attr('action',`/appstractor/saved_canvas/${this.currentIndex}`);
                $('#delete-form').attr('action',`/appstractor/saved_canvas/${this.currentIndex}/?_method=DELETE`);
                $('#save-form').attr('action',`/appstractor/saved_canvas/${this.currentIndex}/?_method=PUT`);
            }
            //prevents fast clicking
            lockArrows = () => {
                $('#left-arrow').css('pointer-events','none');
                $('#right-arrow').css('pointer-events','none');
                setTimeout(()=> {
                    $('#left-arrow').css('pointer-events','auto');
                    $('#right-arrow').css('pointer-events','auto');
                }, 200);
            }
            //prevents gallery from surpassing data length
            toggleArrows = () => {
                //no left arrow past index 0
                this.currentIndex === 0 ? 
                    $('#left-arrow').css('display','none') : $('#left-arrow').css('display','');
                //no right arrow past last index
                (this.currentIndex === this.dataLength - 1) || (this.dataLength < 1) ? 
                    $('#right-arrow').css('display','none') : $('#right-arrow').css('display','');
            }
            //prevents blank container on load in
            toggleIframes = () => { 
                const $iframe = $('<iframe>').attr('src',`/appstractor/saved_canvas/${this.currentIndex}`);
                $iframe.insertAfter($('iframe'));
                //prevents fast clicking from causing population error
                setTimeout(()=> {
                    for(let i = 0; i < $('iframe').length - 1; i++){
                        $('iframe').eq(i).remove()
                    }
                }, 200); 
            }
            disableButtons (num) {
                $('#left-arrow').css('pointer-events','none');
                $('#right-arrow').css('pointer-events','none');
                $('.button').css('opacity','.5').css('pointer-events','none');
                setTimeout( () => {
                    $('#left-arrow').css('pointer-events','auto');
                    $('#right-arrow').css('pointer-events','auto');
                    //buttons remain disabled when gallery fully empties
                    this.dataLength > 0 ? 
                        $('.button').css('opacity','1').css('pointer-events','auto') : null; 
                },num);
            }
            //image download function
            downloadPNG = () => {
                //jQuery does not work
                const link = document.createElement('a');
                $(link).attr('download', `appstractor${this.docIDs[this.currentIndex]}.png`);
                $(link).attr('href', `/./saved/appstractor.png`);
                link.click(); 
            }
            //html download function 
            downloadHTML = () => {
                //jQuery does not work
                const link = document.createElement('a');
                const html = $('iframe').contents().find('html').html();
                $(link).attr('download', `appstractor${this.docIDs[this.currentIndex]}.html`);
                $(link).attr('href', 'data:' + 'text/plain' + ';charset=utf-8,' + encodeURIComponent(html));
                link.click();  
            }
            addEventListeners () {
                $('#left-arrow').on('click', () => {
                    this.currentIndex -= 1
                    this.updateGallery(); 
                });
                $('#right-arrow').on('click', () => {
                    this.currentIndex += 1
                    this.updateGallery();
                });
                $('#edit').on('click', () => {
                    //toggle conditional
                    $('#edit-panel').css('display') === 'none' ?
                        $('#edit-panel').css('display','inherit') : $('#edit-panel').css('display','none');
                });
                //also submits current index to download route
                $('#download').on('click', () => {
                    this.disableButtons(6000);
                    //delayed to allow time for page to be captured as png before download
                    setTimeout( () => { 
                        this.downloadPNG();
                        this.downloadHTML(); 
                    },6000);
                });
                //also submits current index to delete route
                $('#delete').on('click', () => {
                    //ensures delete route always occurs before updating properties, even though its already js default
                    setTimeout(() => { 
                        //prevents spamming of delete button and accidental deletes
                        this.disableButtons(500);
                        //reduces data length on deletion 
                        this.dataLength > 0 ? this.dataLength -= 1 : null;
                        //removes current index's id from docIDs array to sync with data length
                        this.dataLength > 0 ? this.docIDs.splice(this.currentIndex, 1) : null;
                        //if last image deleted, renders previous; otherwise, renders proceeding
                        (this.currentIndex === this.dataLength) && (this.dataLength > 0)? 
                            this.currentIndex -= 1 : null; 
                        //forces update to wait until properties are updated to prevent incorrect render
                        setTimeout(()=> this.updateGallery(), 0); 
                    }, 0);
                }); 
                $('#detail',parent.document).on('click', () => {
                    const $iframe = $('iframe').contents();
                    //remove transition animation
                    $iframe.find('.cell').css('transition','');
                    $iframe.find('.background-canvas').removeClass('show');
                    //toggle conditionals
                    $iframe.find('.cell').css('background-size') === '2000%' ?
                        $iframe.find('.cell').css('background-size','200000%') : $iframe.find('.cell').css('background-size','2000%');
                    $iframe.find('.background-canvas').css('background-size') === '100% 100%' ?
                        $iframe.find('.background-canvas').css('background-size','10000% 10000%') : $iframe.find('.background-canvas').css('background-size','100% 100%');
                });
                $('#shadow',parent.document).on('click', () => {
                    const $iframe = $('iframe').contents();
                    //remove transition animation
                    $iframe.find('.cell').css('transition','');
                    //toggle conditional
                    $iframe.find('.cell').css('box-shadow') === 'none' ?
                        $iframe.find('.cell').css('box-shadow','-2.5px 5px 25px 0px rgba(0,0,0,.6)') : $iframe.find('.cell').css('box-shadow','none');
                });
                //passes iframe body html to POST/save route 
                $('#save',parent.document).on('click', () => {
                    $('input').val($('iframe').contents().find('html').html());
                    this.disableButtons(500);
                    setTimeout( ()=> $('#edit-panel').css('display','none'), 500);
                }); 
            }
        }
        const gallery = new Gallery;
        gallery.initialize(); 
    
    </script>
</body>
</html>