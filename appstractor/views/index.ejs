<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Appstractor Interface</title>
    <link rel="stylesheet" href="/../css/main.css">
    <link rel="stylesheet" href="/../css/background.css">
    <link href="https://fonts.googleapis.com/css?family=Saira+Stencil+One&display=swap" rel="stylesheet">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script></head>
<body>
    <!-- fixed -->
    <div class="nav-container">
        <nav>
            <a href="/appstractor" class="logo-icon">&nbspA&nbsp</a>
            <a href="/appstractor/render">Render</a>    
            <a href="/appstractor/gallery">Gallery</a>   
            <a href="#">Sign Out</a>
        </nav>
    </div>
    <!-- absolute + relative overlay for gradient text -->
    <div class="logo-container">
        <div class="filler nav-container"></div>
        <div class="logo">Appstractor</div>
        <div class="filler nav-container"></div>
    </div>
     <!-- relative -->
    <div class="filler nav-container"></div>
    <div class="logo-bg-color"></div>
    <div class="filler nav-container"></div>
    <!-- fixed -->
    <!-- <div class="buttons-container"></div> -->
    <!-- absolute image grid -->
    <div class="image-grid">
    </div>
    <!-- absolute bg image -->
    <div class="overlay-color"></div>
    <div class="overlay-image"></div>
    <script>
        class Background {
            constructor () {
                this.unchanged = [];
                this.changed = []; 
            }
            initialize () {
                this.renderImages();
                this.selectVisible();
                this.renderAnimation();
            }
            renderImages () {
                for(let i = 0; i < 5; i ++) {
                    for (let i = 1; i <= 20; i ++) {
                        const $image = $('<div>').addClass('image');
                        $image.css('background-image',`url('./images/home${i}.png')`);
                        $('.image-grid').append($image);
                    }
                }
            }
            selectVisible () {
                for(let i = 0; i < 60; i ++) {
                    this.unchanged.push($('.image').eq(i));
                }
                console.log(this.unchanged);
            }
            resetProperties () {
                this.unchanged = this.changed; 
                this.changed = [];
            }
            renderAnimation () {
                setInterval( () => {
                    this.unchanged.length === 0 ? this.resetProperties() : null; 
                    const $random = this.unchanged.length > 53 ? 
                        this.unchanged[42] : this.unchanged[Math.floor(Math.random() * this.unchanged.length)];
                    const num = Math.floor(Math.random() * 20) + 1; 
                    $random.css('opacity', '.9').css('background-image', `url('./images/home${num}.png')`);
                    setTimeout(()=>$random.css('opacity', '.35').css('background-image', `url('./images/home${num}.png')`),1000);
                    this.changed.push($random);
                    this.unchanged.splice(this.unchanged.indexOf($random),1); 
                }, 200);
            }   
        }

        const background = new Background;
        background.initialize();
    </script>
</body>
</html>