{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/pavloskaralis/Desktop/traveler_frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    min-width: 80px;\\n    height: 40px;\\n    border-radius: 8px;\\n    background-color: \",\";\\n    color: \",\";\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    background-position: center;\\n    background-repeat: no-repeat;\\n    cursor: pointer;\\n    background-image: \",\";\\n    background-size: \",\";\\n    &:hover {\\n        background-color: \",\";\\n    }\\n\\n    @media (max-width: 499px) {\\n        min-width: 60px;\\n        max-width: 60px;\\n    }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import{connect}from'react-redux';import styled from'styled-components';import history from'../history.js';import toggleForm from'../actions/toggleForm.js';import selectItinerary from'../actions/selectItinerary.js';var ButtonStyle=styled.div(_templateObject(),function(props){return props.theme.black;},function(props){return props.theme.orange;},function(props){return\"url(\".concat(props.image,\")\");},function(props){return props.size;},function(props){return props.theme.blackHover;});var mapDispatchToProps={toggleForm:toggleForm,selectItinerary:selectItinerary};var Button=function Button(_ref){var type=_ref.type,toggleForm=_ref.toggleForm,selectItinerary=_ref.selectItinerary,image=_ref.image,size=_ref.size;// all buttons except back toggle form\nvar onClick=type==='return'?function(){history.push('/');selectItinerary('');}:function(){return toggleForm(type);};return React.createElement(ButtonStyle,{onClick:onClick,image:image,size:size});};Button=connect(null,mapDispatchToProps)(Button);export default Button;","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/traveler_frontend/src/components/Button.js"],"names":["React","connect","styled","history","toggleForm","selectItinerary","ButtonStyle","div","props","theme","black","orange","image","size","blackHover","mapDispatchToProps","Button","type","onClick","push"],"mappings":"8vBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,+BAA5B,CAGA,GAAMC,CAAAA,WAAW,CAAGJ,MAAM,CAACK,GAAV,mBAIO,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAN,CAAYC,KAAhB,EAJZ,CAKJ,SAAAF,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAN,CAAYE,MAAhB,EALD,CAYO,SAAAH,KAAK,sBAAWA,KAAK,CAACI,KAAjB,OAZZ,CAaM,SAAAJ,KAAK,QAAIA,CAAAA,KAAK,CAACK,IAAV,EAbX,CAeW,SAAAL,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAN,CAAYK,UAAhB,EAfhB,CAAjB,CAyBA,GAAMC,CAAAA,kBAAkB,CAAG,CACvBX,UAAU,CAAVA,UADuB,CAEvBC,eAAe,CAAfA,eAFuB,CAA3B,CAMA,GAAIW,CAAAA,MAAM,CAAG,qBAAsD,IAApDC,CAAAA,IAAoD,MAApDA,IAAoD,CAA9Cb,UAA8C,MAA9CA,UAA8C,CAAlCC,eAAkC,MAAlCA,eAAkC,CAAjBO,KAAiB,MAAjBA,KAAiB,CAAVC,IAAU,MAAVA,IAAU,CAC9D;AACD,GAAMK,CAAAA,OAAO,CAAGD,IAAI,GAAK,QAAT,CAAoB,UAAK,CAACd,OAAO,CAACgB,IAAR,CAAa,GAAb,EAAkBd,eAAe,CAAC,EAAD,CAAf,CAAoB,CAAhE,CAAmE,iBAAKD,CAAAA,UAAU,CAACa,IAAD,CAAf,EAAnF,CACA,MACI,qBAAC,WAAD,EAAa,OAAO,CAAGC,OAAvB,CAAiC,KAAK,CAAEN,KAAxC,CAA+C,IAAI,CAAEC,IAArD,EADJ,CAGH,CAND,CAQAG,MAAM,CAAGf,OAAO,CACZ,IADY,CAEZc,kBAFY,CAAP,CAGPC,MAHO,CAAT,CAKA,cAAeA,CAAAA,MAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport history from '../history.js'\nimport toggleForm from '../actions/toggleForm.js';\nimport selectItinerary from '../actions/selectItinerary.js';\n\n\nconst ButtonStyle = styled.div`\n    min-width: 80px;\n    height: 40px;\n    border-radius: 8px;\n    background-color: ${props => props.theme.black};\n    color: ${props => props.theme.orange};\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background-position: center;\n    background-repeat: no-repeat;\n    cursor: pointer;\n    background-image: ${props => `url(${props.image})`};\n    background-size: ${props => props.size};\n    &:hover {\n        background-color: ${props => props.theme.blackHover};\n    }\n\n    @media (max-width: 499px) {\n        min-width: 60px;\n        max-width: 60px;\n    }\n`;\n\n\nconst mapDispatchToProps = {\n    toggleForm,\n    selectItinerary\n}\n\n\nlet Button = ({type, toggleForm, selectItinerary, image, size}) => {\n     // all buttons except back toggle form\n    const onClick = type === 'return' ? ()=> {history.push('/');selectItinerary('')} : ()=> toggleForm(type);\n    return (\n        <ButtonStyle onClick={ onClick } image={image} size={size}></ButtonStyle>\n    )\n}\n\nButton = connect(\n    null,\n    mapDispatchToProps\n)(Button)\n\nexport default Button\n\n  "]},"metadata":{},"sourceType":"module"}