{"ast":null,"code":"var _jsxFileName = \"/Users/pavloskaralis/Desktop/traveler_frontend/src/components/Search.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport searchIcon from '../images/search.png';\nimport leftIcon from '../images/left.png';\nimport rightIcon from '../images/right.png';\nimport setFilter from '../actions/setFilter.js';\nimport toggleTable from '../actions/toggleTable.js';\nconst Wrapper = styled.form`\n  display: flex;\n  height: 40px;\n  min-width: ${props => props.page === 'index' ? '50%' : '0%'}; \n  border-radius: 8px;\n  box-sizing: border-box;\n  max-width: ${props => props.page === 'show' ? '400px' : ''};\n  margin: ${props => props.page === 'show' ? '0 8px' : ''};\n\n  & input, select {\n    font-size: 16px;\n    padding: 16px;\n    width: calc(100% - 80px);\n    font-family: Verdana;\n    border-radius: 8px 0 0 8px;\n    border: none;\n    outline: none;\n    box-sizing: border-box;\n  }\n\n  & select {\n    min-height: 40px;\n    text-align-last: center;\n    padding-right: 20px; \n    min-width:  0px; \n    cursor: pointer; \n\n    @-moz-document url-prefix() {\n      padding: 0;\n    }\n  }\n\n  &:hover {\n    box-shadow: 0 2px 2px 0 rgba(0,0,0,.5);\n  }\n`;\nconst Submit = styled.div`\n  background-color: ${props => props.theme.black};\n  width: 80px;\n  height: 40px;\n  border-radius: 0;\n  cursor: pointer;\n  background-image: url(${searchIcon});\n  background-size: 20px;\n  background-repeat: no-repeat;\n  background-position: center;\n  color: ${props => props.theme.opaque};\n\n  &:hover {\n    background-color: ${props => props.theme.blackHover};\n  }\n`;\nconst Arrow = styled(Submit)`\n  background-size: 20px;\n  min-width: 40px;\n  max-width: 40px; \n  background-image: ${props => `url(${props.image})`};\n  border-radius: ${props => props.radius}; \n`;\n\nconst mapStateToProps = state => {\n  return {\n    table: state.table,\n    tables: state.itinerary.dates,\n    itinerary: state.itinerary\n  };\n};\n\nconst mapDispatchToProps = {\n  setFilter,\n  toggleTable\n}; // component has conditional css based on current table or show page\n\nlet Search = ({\n  setFilter,\n  page,\n  tables,\n  toggleTable,\n  itinerary,\n  table\n}) => {\n  //conditional form submit \n  const submit = e => {\n    e.preventDefault();\n\n    switch (page) {\n      case 'index':\n        setFilter(query.value);\n        break;\n\n      case 'show':\n        toggleTable(query.value);\n        break;\n\n      default:\n        return;\n    }\n  }; //required to update query value once submit is used; passed to left and right onClick\n\n\n  const update = nextTable => document.querySelector('select').value = nextTable; //conditional table arrow button values\n\n\n  let left;\n  let right;\n\n  if (tables) {\n    const currentIndex = tables.indexOf(table);\n    left = currentIndex !== 0 ? tables[currentIndex - 1] : tables[tables.length - 1];\n    right = currentIndex !== tables.length - 1 ? tables[currentIndex + 1] : tables[0];\n  } //input reference\n\n\n  let query;\n  return React.createElement(Wrapper, {\n    page: page,\n    onSubmit: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, page === 'show' && React.createElement(Arrow, {\n    radius: \"8px 0 0 8px\",\n    image: leftIcon,\n    onClick: () => {\n      toggleTable(left);\n      update(left);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), page === 'index' && React.createElement(\"input\", {\n    type: \"text\",\n    ref: node => query = node,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), page === 'show' && itinerary && React.createElement(\"select\", {\n    onChange: () => {\n      toggleTable(query.value);\n      update(query.value);\n    },\n    ref: node => query = node,\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, itinerary.dates.map(date => {\n    return React.createElement(\"option\", {\n      key: date,\n      value: date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, date);\n  })), page === 'show' && React.createElement(Arrow, {\n    image: rightIcon,\n    onClick: () => {\n      toggleTable(right);\n      update(right);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), page === 'index' && React.createElement(Submit, {\n    onClick: e => {\n      e.preventDefault();\n      setFilter(query.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }));\n};\n\nSearch = connect(mapStateToProps, mapDispatchToProps)(Search);\nexport default Search;","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/traveler_frontend/src/components/Search.js"],"names":["React","connect","styled","searchIcon","leftIcon","rightIcon","setFilter","toggleTable","Wrapper","form","props","page","Submit","div","theme","black","opaque","blackHover","Arrow","image","radius","mapStateToProps","state","table","tables","itinerary","dates","mapDispatchToProps","Search","submit","e","preventDefault","query","value","update","nextTable","document","querySelector","left","right","currentIndex","indexOf","length","node","map","date"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport searchIcon from '../images/search.png'\nimport leftIcon from '../images/left.png'\nimport rightIcon from '../images/right.png'\nimport setFilter from '../actions/setFilter.js'\nimport toggleTable from '../actions/toggleTable.js'\n\nconst Wrapper = styled.form`\n  display: flex;\n  height: 40px;\n  min-width: ${props => props.page === 'index' ? '50%' : '0%'}; \n  border-radius: 8px;\n  box-sizing: border-box;\n  max-width: ${props => props.page === 'show' ? '400px' : ''};\n  margin: ${props => props.page === 'show' ? '0 8px' : ''};\n\n  & input, select {\n    font-size: 16px;\n    padding: 16px;\n    width: calc(100% - 80px);\n    font-family: Verdana;\n    border-radius: 8px 0 0 8px;\n    border: none;\n    outline: none;\n    box-sizing: border-box;\n  }\n\n  & select {\n    min-height: 40px;\n    text-align-last: center;\n    padding-right: 20px; \n    min-width:  0px; \n    cursor: pointer; \n\n    @-moz-document url-prefix() {\n      padding: 0;\n    }\n  }\n\n  &:hover {\n    box-shadow: 0 2px 2px 0 rgba(0,0,0,.5);\n  }\n`;\n\nconst Submit = styled.div`\n  background-color: ${props => props.theme.black};\n  width: 80px;\n  height: 40px;\n  border-radius: 0;\n  cursor: pointer;\n  background-image: url(${searchIcon});\n  background-size: 20px;\n  background-repeat: no-repeat;\n  background-position: center;\n  color: ${props => props.theme.opaque};\n\n  &:hover {\n    background-color: ${props => props.theme.blackHover};\n  }\n`;\n\nconst Arrow = styled(Submit)`\n  background-size: 20px;\n  min-width: 40px;\n  max-width: 40px; \n  background-image: ${props => `url(${props.image})`};\n  border-radius: ${props => props.radius}; \n`;\n\n\nconst mapStateToProps = state => {\n  return {\n    table: state.table,\n    tables: state.itinerary.dates,\n    itinerary: state.itinerary\n  }\n}\n\nconst mapDispatchToProps = {\n  setFilter,\n  toggleTable\n}\n\n\n// component has conditional css based on current table or show page\nlet Search = ({setFilter, page, tables, toggleTable, itinerary, table}) => {\n\n  //conditional form submit \n  const submit = e => {\n    e.preventDefault();\n    \n    switch(page) {\n      case 'index': setFilter(query.value);\n        break;\n      case 'show': toggleTable(query.value);\n        break;\n      default: return;\n    }\n   \n  }\n\n  //required to update query value once submit is used; passed to left and right onClick\n  const update = (nextTable) => document.querySelector('select').value = nextTable;\n\n  //conditional table arrow button values\n  let left;\n  let right;\n  if(tables){\n    const currentIndex = tables.indexOf(table);\n    left = currentIndex !== 0 ? tables[currentIndex - 1] : tables[tables.length - 1];\n    right = currentIndex !== tables.length - 1 ? tables[currentIndex + 1] : tables[0];\n  }\n\n  //input reference\n  let query;\n\n  return (\n      <Wrapper page={page} onSubmit={submit}>\n        {page === 'show' && <Arrow radius='8px 0 0 8px' image={leftIcon} onClick={ ()=> {toggleTable(left); update(left)}}/>}\n        {page === 'index' && <input type='text' ref={node => query = node}/>}\n        {page === 'show' && itinerary &&       \n          <select  onChange={()=>{toggleTable(query.value); update(query.value)}} ref={node => query = node} autoFocus >\n              {itinerary.dates.map(date => {\n                  return (\n                      <option key={date} value={date}>{date}</option>\n                  )\n              })}\n          </select>\n        }\n        {page === 'show' && <Arrow image={rightIcon} onClick={ ()=> {toggleTable(right); update(right)}}/>}\n        {page === 'index' && <Submit onClick={e => {e.preventDefault(); setFilter(query.value)}}/>}\n      </Wrapper> \n  )\n}\n\nSearch = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Search)\n\nexport default Search\n\n  "]},"metadata":{},"sourceType":"module"}