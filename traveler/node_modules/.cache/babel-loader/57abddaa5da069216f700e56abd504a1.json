{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/pavloskaralis/Desktop/pavloskaralis.github.io/traveler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n    width: 100%;\\n    max-width: 992px;\\n    height: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n\\n    & div {\\n        position: fixed;\\n        width: 100%;\\n        max-width: 992px;\\n        text-align: center;\\n        color: \",\";\\n        font-family: Verdana;\\n        font-weight: 600;\\n    }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    margin:0 auto; \\n    max-width: 992px;\\n    min-width: 300px; \\n    height: calc(100% - 120px); \\n    width: 100%; \\n    background-color: white; \\n    display: flex;\\n    flex-direction: column;\\n    justify-content: flex-start;\\n    overflow-y: auto;\\n    box-sizing: border-box;\\n    box-shadow: 0 0 4px 0 rgba(0,0,0,.5);\\n    ::-webkit-scrollbar {\\n    width: 8px;    \\n    height: 8px;\\n    background-color: \",\";\\n    }\\n    ::-webkit-scrollbar-thumb {\\n        background-color: \",\";   \\n    }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    width: 100%;\\n    height: calc(100vh - 60px);\\n    display: flex;\\n    flex-direction: column;\\n    background-color: \",\"; \\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import{connect}from'react-redux';import styled from'styled-components';import toggleDropdown from'../actions/toggleDropdown.js';import Tools from'./Tools.js';import Itinerary from'./Itinerary.js';import Form from'./Form.js';var Wrapper=styled.div(_templateObject(),function(props){return props.theme.cream;});var Container=styled.div(_templateObject2(),function(props){return props.theme.gray;},function(props){return props.theme.black;});var Empty=styled.div(_templateObject3(),function(props){return props.theme.gray;});var mapStateToProps=function mapStateToProps(state){return{dropdown:state.dropdown,itineraries:state.itineraries,filter:state.filter,form:state.form};};var mapDispatchToProps={toggleDropdown:toggleDropdown};var Index=function Index(_ref){var dropdown=_ref.dropdown,toggleDropdown=_ref.toggleDropdown,itineraries=_ref.itineraries,filter=_ref.filter,form=_ref.form;//filter itinerary by search bar query\nif(filter)itineraries=itineraries.filter(function(itinerary){return itinerary.location.toLowerCase()===filter.toLowerCase();});return(/*#__PURE__*/React.createElement(Wrapper,{onClick:function onClick(){if(dropdown)toggleDropdown(false);}},form&&/*#__PURE__*/React.createElement(Form,{page:\"index\"}),/*#__PURE__*/React.createElement(Tools,{page:\"index\"}),/*#__PURE__*/React.createElement(Container,null,itineraries.length===0&&!filter&&/*#__PURE__*/React.createElement(Empty,null,/*#__PURE__*/React.createElement(\"div\",null,\"You Have No Itineraries\")),itineraries.length===0&&filter&&/*#__PURE__*/React.createElement(Empty,null,/*#__PURE__*/React.createElement(\"div\",null,\"No Matching Itineraries\")),itineraries.map(function(itinerary,index){return(/*#__PURE__*/React.createElement(Itinerary,{itinerary:itinerary,index:index,key:itinerary.id,s:true}));}))));};Index=connect(mapStateToProps,mapDispatchToProps)(Index);export default Index;","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/pavloskaralis.github.io/traveler/src/components/Index.js"],"names":["React","connect","styled","toggleDropdown","Tools","Itinerary","Form","Wrapper","div","props","theme","cream","Container","gray","black","Empty","mapStateToProps","state","dropdown","itineraries","filter","form","mapDispatchToProps","Index","itinerary","location","toLowerCase","length","map","index","id"],"mappings":"wjDAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,8BAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,YAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,gBAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,WAAjB,CAEA,GAAMC,CAAAA,OAAO,CAAGL,MAAM,CAACM,GAAV,mBAKW,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAN,CAAYC,KAAhB,EALhB,CAAb,CAQA,GAAMC,CAAAA,SAAS,CAAGV,MAAM,CAACM,GAAV,oBAgBS,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAN,CAAYG,IAAhB,EAhBd,CAmBa,SAAAJ,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAN,CAAYI,KAAhB,EAnBlB,CAAf,CAuBA,GAAMC,CAAAA,KAAK,CAAGb,MAAM,CAACM,GAAV,oBAaM,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,KAAN,CAAYG,IAAhB,EAbX,CAAX,CAmBA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAO,CACLC,QAAQ,CAAED,KAAK,CAACC,QADX,CAELC,WAAW,CAAEF,KAAK,CAACE,WAFd,CAGLC,MAAM,CAAEH,KAAK,CAACG,MAHT,CAILC,IAAI,CAAEJ,KAAK,CAACI,IAJP,CAAP,CAMH,CAPD,CASA,GAAMC,CAAAA,kBAAkB,CAAG,CACvBnB,cAAc,CAAdA,cADuB,CAA3B,CAIA,GAAIoB,CAAAA,KAAK,CAAG,oBAA2D,IAAzDL,CAAAA,QAAyD,MAAzDA,QAAyD,CAA/Cf,cAA+C,MAA/CA,cAA+C,CAA/BgB,WAA+B,MAA/BA,WAA+B,CAAlBC,MAAkB,MAAlBA,MAAkB,CAAVC,IAAU,MAAVA,IAAU,CAEnE;AACA,GAAGD,MAAH,CAAWD,WAAW,CAAGA,WAAW,CAACC,MAAZ,CAAmB,SAAAI,SAAS,QAAIA,CAAAA,SAAS,CAACC,QAAV,CAAmBC,WAAnB,KAAqCN,MAAM,CAACM,WAAP,EAAzC,EAA5B,CAAd,CAEX,oBACI,oBAAC,OAAD,EAAS,OAAO,CAAE,kBAAK,CAAC,GAAGR,QAAH,CAAYf,cAAc,CAAC,KAAD,CAAd,CAAsB,CAA1D,EACKkB,IAAI,eAAI,oBAAC,IAAD,EAAM,IAAI,CAAC,OAAX,EADb,cAEI,oBAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,EAFJ,cAGI,oBAAC,SAAD,MAEKF,WAAW,CAACQ,MAAZ,GAAuB,CAAvB,EAA4B,CAACP,MAA7B,eACG,oBAAC,KAAD,mBACI,yDADJ,CAHR,CAOKD,WAAW,CAACQ,MAAZ,GAAuB,CAAvB,EAA4BP,MAA5B,eACG,oBAAC,KAAD,mBACI,yDADJ,CARR,CAaKD,WAAW,CAACS,GAAZ,CAAgB,SAACJ,SAAD,CAAWK,KAAX,sBAAqB,oBAAC,SAAD,EAAW,SAAS,CAAEL,SAAtB,CAAiC,KAAK,CAAEK,KAAxC,CAA+C,GAAG,CAAEL,SAAS,CAACM,EAA9D,CAAiE,CAAC,KAAlE,EAArB,GAAhB,CAbL,CAHJ,CADJ,EAqBH,CA1BD,CA4BAP,KAAK,CAAGtB,OAAO,CACXe,eADW,CAEXM,kBAFW,CAAP,CAGNC,KAHM,CAAR,CAKA,cAAeA,CAAAA,KAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport toggleDropdown from '../actions/toggleDropdown.js'\nimport Tools from './Tools.js'\nimport Itinerary from './Itinerary.js'\nimport Form from './Form.js'\n\nconst Wrapper = styled.div`\n    width: 100%;\n    height: calc(100vh - 60px);\n    display: flex;\n    flex-direction: column;\n    background-color: ${props => props.theme.cream}; \n`;\n\nconst Container = styled.div`\n    margin:0 auto; \n    max-width: 992px;\n    min-width: 300px; \n    height: calc(100% - 120px); \n    width: 100%; \n    background-color: white; \n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    overflow-y: auto;\n    box-sizing: border-box;\n    box-shadow: 0 0 4px 0 rgba(0,0,0,.5);\n    ::-webkit-scrollbar {\n    width: 8px;    \n    height: 8px;\n    background-color: ${props => props.theme.gray};\n    }\n    ::-webkit-scrollbar-thumb {\n        background-color: ${props => props.theme.black};   \n    }\n`;\n\nconst Empty = styled.div`\n    width: 100%;\n    max-width: 992px;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    & div {\n        position: fixed;\n        width: 100%;\n        max-width: 992px;\n        text-align: center;\n        color: ${props => props.theme.gray};\n        font-family: Verdana;\n        font-weight: 600;\n    }\n`;\n\nconst mapStateToProps = state => {\n    return {\n      dropdown: state.dropdown,\n      itineraries: state.itineraries,\n      filter: state.filter,\n      form: state.form\n    }\n}\n\nconst mapDispatchToProps = {\n    toggleDropdown\n}\n\nlet Index = ({dropdown, toggleDropdown, itineraries, filter, form}) => {\n\n    //filter itinerary by search bar query\n    if(filter) itineraries = itineraries.filter(itinerary => itinerary.location.toLowerCase() === filter.toLowerCase());\n\n    return (\n        <Wrapper onClick={()=> {if(dropdown)toggleDropdown(false)}}>\n            {form && <Form page='index'/>}\n            <Tools page='index'/>\n            <Container>\n                {/* empty page state conditionals */}\n                {itineraries.length === 0 && !filter && \n                    <Empty>\n                        <div>You Have No Itineraries</div>\n                    </Empty>\n                }\n                {itineraries.length === 0 && filter && \n                    <Empty>\n                        <div>No Matching Itineraries</div>\n                    </Empty>\n                }\n                {/* index is passed multiple times to swap updated index with outdate version is state */}\n                {itineraries.map((itinerary,index) => <Itinerary itinerary={itinerary} index={index} key={itinerary.id}s/>)}\n            </Container>\n        </Wrapper>\n    )\n}\n\nIndex = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Index)\n\nexport default Index\n\n  "]},"metadata":{},"sourceType":"module"}