{"ast":null,"code":"import _toConsumableArray from\"/Users/pavloskaralis/Desktop/pavloskaralis.github.io/traveler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";export default function username(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'SET_ITINERARIES':// sort itineraries by newest to oldest\nreturn action.itineraries.sort(function(a,b){return b.id-a.id;});case'ADD_ITINERARY':return[action.itinerary].concat(_toConsumableArray(state));case'SWAP_ITINERARY':return[].concat(_toConsumableArray(state.slice(0,action.index)),[action.itinerary],_toConsumableArray(state.slice(action.index+1)));case'REMOVE_ITINERARY':return state.filter(function(itinerary){return itinerary.id!==action.id;});default:return state;}}","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/pavloskaralis.github.io/traveler/src/reducers/itineraries.js"],"names":["username","state","action","type","itineraries","sort","a","b","id","itinerary","slice","index","filter"],"mappings":"4LAAA,cAAe,SAASA,CAAAA,QAAT,EAAsC,IAApBC,CAAAA,KAAoB,2DAAZ,EAAY,IAARC,CAAAA,MAAQ,2CACjD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,iBAAL,CACI;AACA,MAAOD,CAAAA,MAAM,CAACE,WAAP,CAAmBC,IAAnB,CAAwB,SAACC,CAAD,CAAIC,CAAJ,QAASA,CAAAA,CAAC,CAACC,EAAF,CAAOF,CAAC,CAACE,EAAlB,EAAxB,CAAP,CACJ,IAAK,eAAL,CACI,OAAQN,MAAM,CAACO,SAAf,4BAA6BR,KAA7B,GACJ,IAAK,gBAAL,CACI,mCAAWA,KAAK,CAACS,KAAN,CAAY,CAAZ,CAAcR,MAAM,CAACS,KAArB,CAAX,GAAuCT,MAAM,CAACO,SAA9C,qBAA2DR,KAAK,CAACS,KAAN,CAAYR,MAAM,CAACS,KAAP,CAAe,CAA3B,CAA3D,GACJ,IAAK,kBAAL,CACI,MAAOV,CAAAA,KAAK,CAACW,MAAN,CAAa,SAAAH,SAAS,QAAIA,CAAAA,SAAS,CAACD,EAAV,GAAiBN,MAAM,CAACM,EAA5B,EAAtB,CAAP,CACJ,QACI,MAAOP,CAAAA,KAAP,CAXR,CAaH","sourcesContent":["export default function username(state = [], action) {\n    switch (action.type) {\n        case 'SET_ITINERARIES':\n            // sort itineraries by newest to oldest\n            return action.itineraries.sort((a, b)=> b.id - a.id);\n        case 'ADD_ITINERARY':\n            return [action.itinerary, ...state]\n        case 'SWAP_ITINERARY': \n            return [...state.slice(0,action.index),action.itinerary,...state.slice(action.index + 1)]\n        case 'REMOVE_ITINERARY':\n            return state.filter(itinerary => itinerary.id !== action.id)\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}