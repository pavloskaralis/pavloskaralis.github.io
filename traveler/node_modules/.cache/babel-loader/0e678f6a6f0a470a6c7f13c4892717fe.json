{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pavloskaralis/Desktop/traveler_frontend/node_modules/@babel/runtime/regenerator\";import axios from'axios';import history from'../history.js';import toggleForm from'./toggleForm.js';import selectItinerary from'./selectItinerary.js';import removeItinerary from'./removeItinerary.js';export default function deleteItinerary(itinerary,userID){return function(dispatch){var removeRequests=function removeRequests(){var result,data;return _regeneratorRuntime.async(function removeRequests$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(axios.delete(\"https://traveler-backend.herokuapp.com/lookups/\".concat(userID,\"/\").concat(itinerary.id)));case 2:result=_context.sent;data=result.data;if(!data.error){history.push('/');dispatch(toggleForm(''));dispatch(selectItinerary(''));dispatch(removeItinerary(itinerary.id));}else{console.log('Failed To Remove');}case 5:case\"end\":return _context.stop();}}});};var deleteRequest=function deleteRequest(){var result,data;return _regeneratorRuntime.async(function deleteRequest$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _regeneratorRuntime.awrap(axios.delete(\"https://traveler-backend.herokuapp.com/itineraries/\".concat(itinerary.id)));case 2:result=_context2.sent;data=result.data;if(!data.error){history.push('/');dispatch(toggleForm(''));dispatch(selectItinerary(''));dispatch(removeItinerary(itinerary.id));}else{console.log('Failed To Delete');}case 5:case\"end\":return _context2.stop();}}});};//only delete if no other user has acces; otherwise remove individual user and their interests\nitinerary.usernames.length===1?deleteRequest():removeRequests();};}","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/traveler_frontend/src/actions/deleteItinerary.js"],"names":["axios","history","toggleForm","selectItinerary","removeItinerary","deleteItinerary","itinerary","userID","dispatch","removeRequests","delete","id","result","data","error","push","console","log","deleteRequest","usernames","length"],"mappings":"wHAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,iBAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,sBAA5B,CACA,MAAOC,CAAAA,eAAP,KAA4B,sBAA5B,CAEA,cAAe,SAASC,CAAAA,eAAT,CAAyBC,SAAzB,CAAoCC,MAApC,CAA4C,CACvD,MAAO,UAAAC,QAAQ,CAAI,CAGf,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,4LACET,KAAK,CAACU,MAAN,0DAA+DH,MAA/D,aAAyED,SAAS,CAACK,EAAnF,EADF,SACbC,MADa,eAEZC,IAFY,CAEJD,MAFI,CAEZC,IAFY,CAGnB,GAAG,CAACA,IAAI,CAACC,KAAT,CAAe,CACXb,OAAO,CAACc,IAAR,CAAa,GAAb,EACAP,QAAQ,CAACN,UAAU,CAAC,EAAD,CAAX,CAAR,CACAM,QAAQ,CAACL,eAAe,CAAC,EAAD,CAAhB,CAAR,CACAK,QAAQ,CAACJ,eAAe,CAACE,SAAS,CAACK,EAAX,CAAhB,CAAR,CACH,CALD,IAKO,CACHK,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACH,CAVkB,8CAAvB,CAcA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,+LACGlB,KAAK,CAACU,MAAN,8DAAmEJ,SAAS,CAACK,EAA7E,EADH,SACZC,MADY,gBAEXC,IAFW,CAEHD,MAFG,CAEXC,IAFW,CAGlB,GAAG,CAACA,IAAI,CAACC,KAAT,CAAe,CACXb,OAAO,CAACc,IAAR,CAAa,GAAb,EACAP,QAAQ,CAACN,UAAU,CAAC,EAAD,CAAX,CAAR,CACAM,QAAQ,CAACL,eAAe,CAAC,EAAD,CAAhB,CAAR,CACAK,QAAQ,CAACJ,eAAe,CAACE,SAAS,CAACK,EAAX,CAAhB,CAAR,CACH,CALD,IAKO,CACHK,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACH,CAViB,+CAAtB,CAaA;AACAX,SAAS,CAACa,SAAV,CAAoBC,MAApB,GAA+B,CAA/B,CAAmCF,aAAa,EAAhD,CAAqDT,cAAc,EAAnE,CACH,CAhCD,CAiCH","sourcesContent":["import axios from 'axios'\nimport history from '../history.js'\nimport toggleForm from './toggleForm.js'\nimport selectItinerary from './selectItinerary.js'\nimport removeItinerary from './removeItinerary.js'\n\nexport default function deleteItinerary(itinerary, userID) {\n    return dispatch => {\n        \n        \n        const removeRequests = async () => {\n            const result = await axios.delete(`https://traveler-backend.herokuapp.com/lookups/${userID}/${itinerary.id}`); \n            const {data} = result;     \n            if(!data.error){\n                history.push('/');\n                dispatch(toggleForm(''));\n                dispatch(selectItinerary(''));\n                dispatch(removeItinerary(itinerary.id));\n            } else {               \n                console.log('Failed To Remove')\n            }  \n        }\n\n\n        const deleteRequest = async () => {\n            const result = await axios.delete(`https://traveler-backend.herokuapp.com/itineraries/${itinerary.id}`);  \n            const {data} = result;  \n            if(!data.error){\n                history.push('/');\n                dispatch(toggleForm(''));\n                dispatch(selectItinerary(''));\n                dispatch(removeItinerary(itinerary.id));\n            } else {               \n                console.log('Failed To Delete')\n            }  \n        }\n\n        //only delete if no other user has acces; otherwise remove individual user and their interests\n        itinerary.usernames.length === 1 ? deleteRequest() : removeRequests();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}