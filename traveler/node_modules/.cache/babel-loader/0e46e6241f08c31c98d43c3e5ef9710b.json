{"ast":null,"code":"import _slicedToArray from \"/Users/pavloskaralis/Desktop/traveler_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pavloskaralis/Desktop/traveler_frontend/src/components/Row.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { TextareaAutosize } from '@material-ui/core';\nimport scheduleIcon from '../images/schedule.png';\nimport cancelIcon from '../images/cancel.png';\nimport addIcon from '../images/add.png';\nimport subtractIcon from '../images/subtract.png';\nimport toggleForm from '../actions/toggleForm';\nimport selectPlanningRow from '../actions/selectPlanningRow.js';\nimport putPlanningRow from '../actions/putPlanningRow.js';\nimport deleteSchedulingRow from '../actions/deleteSchedulingRow.js';\nimport putSchedulingRow from '../actions/putSchedulingRow.js';\nconst Wrapper = styled.div`\n    min-height: 60px;\n    width: 100%;\n    min-width: 768px;\n    display: flex;\n    border-bottom: 1px solid ${props => props.theme.gray};\n    padding: 0 8px;\n    box-sizing: border-box;\n\n    input::-webkit-datetime-edit-hour-field:focus,\n    input::-webkit-datetime-edit-minute-field:focus,\n    input::-webkit-datetime-edit-ampm-field:focus {\n        background-color: ${props => props.theme.blue};\n    }\n`;\nconst TextArea = styled(TextareaAutosize)`\n    box-sizing: border-box;\n    min-height: 60px;\n    width: 16.67%;\n    background-color: white;\n    color: ${props => props.theme.black};\n    font-family: Verdana;\n    font-size: 16px;\n    padding: 19px 8px;\n    border: none;\n    resize: none;\n    outline: none;\n    font-weight: ${props => props.first ? '600' : ''};\n`;\nconst TDContainer = styled.div`\n    box-sizing: border-box;\n    min-height: 60px;\n    width: 16.67%;\n    display: flex;\n    flex-direction: ${props => props.interest ? 'row' : 'column'};\n    justify-content: center;\n`;\nconst Icon = styled.div`\n    background-image: ${props => `url(${props.image})`};\n    background-size: 37px;\n    background-repeat: no-repeat;\n    background-position: center; \n    width: 50px;\n    height: 50px;\n    border-radius: 50px;\n    cursor: pointer;\n    align-self: center;\n\n    &:hover {\n        background-color: ${props => props.theme.orange};\n    }\n`;\nconst Interest = styled.div`\n    font-family: Verdana;\n    color: ${props => props.theme.black};\n    align-self: center;\n    margin-right: 16px;\n    font-weight: 600;\n    cursor: default;\n    font-size: 18px;\n`;\nconst Time = styled.input`\n    padding: 4px; \n    font-family: 'Verdana';\n    width: 125px;\n    height: 36px;\n    box-sizing: border-box;\n    font-size: 15px;\n    border: 0;\n    outline: 0;\n    cursor: text;\n    font-weight: 600;\n`;\nconst Button = styled.div`\n    cursor: pointer;\n    align-self: center;\n    background-color: ${props => props.theme.black};\n    width: 18px;\n    height: 18px;\n    border-radius: 4px;\n    background-image: ${props => `url(${props.image})`};\n    background-size: 10px;\n    background-position: center;\n    background-repeat: no-repeat;\n\n    &:hover {\n        background-color: ${props => props.theme.blackHover};\n    }\n`;\n\nconst mapStateToProps = state => {\n  return {\n    userID: state.userID\n  };\n};\n\nconst mapDispatchToProps = {\n  toggleForm,\n  selectPlanningRow,\n  putPlanningRow,\n  deleteSchedulingRow,\n  putSchedulingRow\n};\n\nlet Row = ({\n  rowType,\n  row,\n  userID,\n  toggleForm,\n  selectPlanningRow,\n  putPlanningRow,\n  deleteSchedulingRow,\n  putSchedulingRow\n}) => {\n  //textarea cannot use ref; must rely on state values for storage\n  const _useState = useState(row.activity),\n        _useState2 = _slicedToArray(_useState, 2),\n        activity = _useState2[0],\n        updateActivity = _useState2[1];\n\n  const _useState3 = useState(row.category),\n        _useState4 = _slicedToArray(_useState3, 2),\n        type = _useState4[0],\n        updateType = _useState4[1];\n\n  const _useState5 = useState(row.address),\n        _useState6 = _slicedToArray(_useState5, 2),\n        address = _useState6[0],\n        updateAddress = _useState6[1];\n\n  const _useState7 = useState(row.website),\n        _useState8 = _slicedToArray(_useState7, 2),\n        website = _useState8[0],\n        updateWebsite = _useState8[1];\n\n  const _useState9 = useState(row.interest),\n        _useState10 = _slicedToArray(_useState9, 2),\n        interest = _useState10[0],\n        updateInterest = _useState10[1];\n\n  const _useState11 = useState(row.time),\n        _useState12 = _slicedToArray(_useState11, 2),\n        time = _useState12[0],\n        updateTime = _useState12[1]; //onClick for interest button; not a text area\n\n\n  const toggleInterest = () => {\n    let updatedInterest = interest.indexOf(userID) === -1 ? [...interest, userID] : [...interest.slice(0, interest.indexOf(userID)), ...interest.slice(interest.indexOf(userID) + 1)];\n    updateInterest(updatedInterest);\n  }; // autoupdate for sort \n  //handles input value change for both planning and scheduling row\n\n\n  const handleInput = e => {\n    switch (e.target.id) {\n      case `activity${row.id}`:\n        return updateActivity(e.target.value);\n\n      case `type${row.id}`:\n        return updateType(e.target.value);\n\n      case `address${row.id}`:\n        return updateAddress(e.target.value);\n\n      case `website${row.id}`:\n        return updateWebsite(e.target.value);\n\n      case `time${row.id}`:\n        return updateTime(e.target.value);\n\n      default:\n        console.log();\n    } // updatedTime =  document.querySelector(`#time${row.id}`).value;\n\n  };\n\n  useEffect(() => {\n    // put request row on dismount if changed\n    return () => {\n      if (row.interest) {\n        const updatedPlanning = {\n          activity: activity,\n          category: type,\n          address: address,\n          website: website,\n          interest: JSON.stringify(interest)\n        };\n        console.log(updatedPlanning, row);\n        if (row.activity !== updatedPlanning.activity || row.category !== updatedPlanning.category || row.address !== updatedPlanning.address || row.website !== updatedPlanning.website || row.interest !== updatedPlanning.interest) putPlanningRow(row.id, updatedPlanning, row.id);\n      } else {\n        const updatedScheduling = {\n          activity: activity,\n          category: type,\n          address: address,\n          website: website,\n          time: document.querySelectorAll(`#time${row.id}`)[0].value\n        };\n        if (row.activity !== updatedScheduling.activity || row.category !== updatedScheduling.category || row.address !== updatedScheduling.address || row.website !== updatedScheduling.website || row.time !== updatedScheduling.time) putSchedulingRow(row.id, updatedScheduling, row.id);\n      }\n    };\n  }, [time, activity, type, website, address, interest]);\n  return React.createElement(React.Fragment, null, rowType === 'planning' && React.createElement(Wrapper, {\n    id: row.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    onChange: handleInput,\n    value: activity,\n    first: \"true\",\n    id: `activity${row.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }), React.createElement(TextArea, {\n    onChange: handleInput,\n    value: type,\n    id: `type${row.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), React.createElement(TextArea, {\n    onChange: handleInput,\n    value: address,\n    id: `address${row.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), React.createElement(TextArea, {\n    onChange: handleInput,\n    value: website,\n    id: `website${row.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), React.createElement(TDContainer, {\n    interest: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(Interest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, interest.length), React.createElement(Button, {\n    image: interest.indexOf(userID) === -1 ? addIcon : subtractIcon,\n    onClick: () => toggleInterest(interest),\n    id: \"interest\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  })), React.createElement(TDContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    image: scheduleIcon,\n    onClick: () => {\n      selectPlanningRow(row);\n      toggleForm('schedule');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }))), rowType === 'scheduling' && React.createElement(Wrapper, {\n    id: row.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(TDContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Time, {\n    type: \"time\",\n    onChange: handleInput,\n    defaultValue: row.time,\n    id: `time${row.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  })), React.createElement(TextArea, {\n    onChange: handleInput,\n    value: activity,\n    id: `activity${row.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }), React.createElement(TextArea, {\n    onChange: handleInput,\n    value: type,\n    id: `type${row.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }), React.createElement(TextArea, {\n    onChange: handleInput,\n    value: address,\n    id: `address${row.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }), React.createElement(TextArea, {\n    onChange: handleInput,\n    value: website,\n    id: `website${row.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }), React.createElement(TDContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    image: cancelIcon,\n    onClick: () => deleteSchedulingRow(row.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }))));\n};\n\nRow = connect(mapStateToProps, mapDispatchToProps)(Row);\nexport default Row;","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/traveler_frontend/src/components/Row.js"],"names":["React","useState","useEffect","connect","styled","TextareaAutosize","scheduleIcon","cancelIcon","addIcon","subtractIcon","toggleForm","selectPlanningRow","putPlanningRow","deleteSchedulingRow","putSchedulingRow","Wrapper","div","props","theme","gray","blue","TextArea","black","first","TDContainer","interest","Icon","image","orange","Interest","Time","input","Button","blackHover","mapStateToProps","state","userID","mapDispatchToProps","Row","rowType","row","activity","updateActivity","category","type","updateType","address","updateAddress","website","updateWebsite","updateInterest","time","updateTime","toggleInterest","updatedInterest","indexOf","slice","handleInput","e","target","id","value","console","log","updatedPlanning","JSON","stringify","updatedScheduling","document","querySelectorAll","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { TextareaAutosize } from '@material-ui/core'\nimport scheduleIcon from '../images/schedule.png'\nimport cancelIcon from '../images/cancel.png'\nimport addIcon from '../images/add.png'\nimport subtractIcon from '../images/subtract.png'\nimport toggleForm from '../actions/toggleForm'\nimport selectPlanningRow from '../actions/selectPlanningRow.js'\nimport putPlanningRow from '../actions/putPlanningRow.js'\nimport deleteSchedulingRow from '../actions/deleteSchedulingRow.js'\nimport putSchedulingRow from '../actions/putSchedulingRow.js'\n\n\nconst Wrapper = styled.div`\n    min-height: 60px;\n    width: 100%;\n    min-width: 768px;\n    display: flex;\n    border-bottom: 1px solid ${props => props.theme.gray};\n    padding: 0 8px;\n    box-sizing: border-box;\n\n    input::-webkit-datetime-edit-hour-field:focus,\n    input::-webkit-datetime-edit-minute-field:focus,\n    input::-webkit-datetime-edit-ampm-field:focus {\n        background-color: ${props => props.theme.blue};\n    }\n`;\n\nconst TextArea = styled(TextareaAutosize)`\n    box-sizing: border-box;\n    min-height: 60px;\n    width: 16.67%;\n    background-color: white;\n    color: ${props => props.theme.black};\n    font-family: Verdana;\n    font-size: 16px;\n    padding: 19px 8px;\n    border: none;\n    resize: none;\n    outline: none;\n    font-weight: ${props => props.first ? '600' : ''};\n`;\n\nconst TDContainer = styled.div`\n    box-sizing: border-box;\n    min-height: 60px;\n    width: 16.67%;\n    display: flex;\n    flex-direction: ${props => props.interest? 'row' : 'column'};\n    justify-content: center;\n`;\n\nconst Icon = styled.div`\n    background-image: ${props => `url(${props.image})`};\n    background-size: 37px;\n    background-repeat: no-repeat;\n    background-position: center; \n    width: 50px;\n    height: 50px;\n    border-radius: 50px;\n    cursor: pointer;\n    align-self: center;\n\n    &:hover {\n        background-color: ${props => props.theme.orange};\n    }\n`;\n\nconst Interest = styled.div`\n    font-family: Verdana;\n    color: ${props => props.theme.black};\n    align-self: center;\n    margin-right: 16px;\n    font-weight: 600;\n    cursor: default;\n    font-size: 18px;\n`;\n\nconst Time = styled.input`\n    padding: 4px; \n    font-family: 'Verdana';\n    width: 125px;\n    height: 36px;\n    box-sizing: border-box;\n    font-size: 15px;\n    border: 0;\n    outline: 0;\n    cursor: text;\n    font-weight: 600;\n`;\n\nconst Button = styled.div`\n    cursor: pointer;\n    align-self: center;\n    background-color: ${props => props.theme.black};\n    width: 18px;\n    height: 18px;\n    border-radius: 4px;\n    background-image: ${props => `url(${props.image})`};\n    background-size: 10px;\n    background-position: center;\n    background-repeat: no-repeat;\n\n    &:hover {\n        background-color: ${props => props.theme.blackHover};\n    }\n`;\n\nconst mapStateToProps = state => {\n    return {\n      userID: state.userID\n    }\n}\n\nconst mapDispatchToProps = {\n    toggleForm,\n    selectPlanningRow,\n    putPlanningRow,\n    deleteSchedulingRow,\n    putSchedulingRow\n}\n\n\nlet Row = ({rowType, row, userID, toggleForm, selectPlanningRow, putPlanningRow, deleteSchedulingRow, putSchedulingRow}) => {\n\n    //textarea cannot use ref; must rely on state values for storage\n    const [activity, updateActivity] = useState(row.activity);\n    const [type, updateType] = useState(row.category);\n    const [address, updateAddress] = useState(row.address);\n    const [website, updateWebsite] = useState(row.website);\n    const [interest, updateInterest] = useState(row.interest);\n    const [time, updateTime] = useState(row.time);\n\n    //onClick for interest button; not a text area\n    const toggleInterest = () => {\n        let updatedInterest = interest.indexOf(userID) === -1 ? \n            [...interest,userID] : [...interest.slice(0,interest.indexOf(userID)),...interest.slice(interest.indexOf(userID) + 1)];\n\n        updateInterest(updatedInterest)\n    }\n    \n    // autoupdate for sort \n\n\n    //handles input value change for both planning and scheduling row\n    const handleInput = (e) => {\n        switch(e.target.id){\n            case `activity${row.id}`:return updateActivity(e.target.value);\n            case `type${row.id}`:return updateType(e.target.value);\n            case `address${row.id}`:return updateAddress(e.target.value);\n            case `website${row.id}`:return updateWebsite(e.target.value);\n            case `time${row.id}`: return updateTime(e.target.value);\n            default: console.log();\n        }\n        // updatedTime =  document.querySelector(`#time${row.id}`).value;\n    }\n    \n    useEffect(()=> {\n        // put request row on dismount if changed\n     \n        return (()=> {\n            if(row.interest){\n                const updatedPlanning = {\n                    activity: activity,\n                    category: type,\n                    address: address,\n                    website: website,\n                    interest: JSON.stringify(interest)\n                }\n\n                console.log(updatedPlanning, row)\n                if (row.activity !== updatedPlanning.activity || row.category !== updatedPlanning.category ||\n                    row.address !== updatedPlanning.address || row.website!== updatedPlanning.website || \n                    row.interest !== updatedPlanning.interest \n                )  putPlanningRow(row.id,updatedPlanning,row.id);\n            }else{\n                const updatedScheduling = {\n                    activity: activity,\n                    category: type,\n                    address: address,\n                    website: website,\n                    time: document.querySelectorAll(`#time${row.id}`)[0].value\n                }\n                if(row.activity !== updatedScheduling.activity || row.category !== updatedScheduling.category ||\n                    row.address !== updatedScheduling.address || row.website!== updatedScheduling.website ||\n                    row.time !== updatedScheduling.time \n                ) putSchedulingRow(row.id,updatedScheduling,row.id);\n            }\n        })\n    },[time, activity, type, website, address, interest])\n\n    return (\n        <>\n            {/* planning row */}\n            {rowType === 'planning' && \n                <Wrapper id={row.id}>\n                    <TextArea onChange={handleInput} value={activity} first='true' id={`activity${row.id}`}/>\n                    <TextArea onChange={handleInput} value={type} id={`type${row.id}`}/>\n                    <TextArea onChange={handleInput} value={address} id={`address${row.id}`}/>\n                    <TextArea onChange={handleInput} value={website} id={`website${row.id}`}/>\n                    <TDContainer interest>\n                        <Interest>{interest.length}</Interest>\n                        <Button image={interest.indexOf(userID) === -1 ? addIcon : subtractIcon} onClick={()=> toggleInterest(interest)} id='interest'/>\n                    </TDContainer>\n                    <TDContainer>\n                        <Icon image={scheduleIcon} onClick={()=> {selectPlanningRow(row); toggleForm('schedule')}}/>\n                    </TDContainer>\n                </Wrapper>}\n            {/* scheduling row */}\n            {rowType === 'scheduling' && \n                <Wrapper id={row.id}>\n                    <TDContainer>\n                        <Time type='time' onChange={handleInput} defaultValue={row.time} id={`time${row.id}`}/>\n                    </TDContainer>\n                    <TextArea onChange={handleInput} value={activity} id={`activity${row.id}`}/>\n                    <TextArea onChange={handleInput} value={type} id={`type${row.id}`}/>\n                    <TextArea onChange={handleInput} value={address} id={`address${row.id}`}/>\n                    <TextArea onChange={handleInput} value={website} id={`website${row.id}`}/>\n                    <TDContainer>\n                        <Icon image={cancelIcon} onClick={()=> deleteSchedulingRow(row.id)}/>\n                    </TDContainer>\n                </Wrapper>}\n        </>\n    )\n}\n\nRow = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Row)\n\nexport default Row\n\n  "]},"metadata":{},"sourceType":"module"}