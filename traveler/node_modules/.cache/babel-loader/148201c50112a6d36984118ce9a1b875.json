{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pavloskaralis/Desktop/pavloskaralis.github.io/traveler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pavloskaralis/Desktop/pavloskaralis.github.io/traveler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import setUserID from'./setUserID.js';import setItineraries from'./setItineraries.js';import toggleLogin from'./toggleLogin.js';export default function userSetup(){return function(dispatch){var getRequest=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('https://traveler-backend.herokuapp.com/auto_login',{headers:{Authorization:\"Bearer \".concat(token)}});case 2:result=_context.sent;data=result.data;if(!data.error){//setUserID must dispatch first for Show Page useEffect to work properly\ndispatch(setUserID(data.id));dispatch(toggleLogin(true));dispatch(setItineraries(data.itineraries));}else{dispatch(toggleLogin(false));}case 5:case\"end\":return _context.stop();}}},_callee);}));return function getRequest(){return _ref.apply(this,arguments);};}();var token=localStorage.getItem(\"token\");if(token){getRequest();}else{dispatch(toggleLogin(false));}};}","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/pavloskaralis.github.io/traveler/src/actions/userSetup.js"],"names":["axios","setUserID","setItineraries","toggleLogin","userSetup","dispatch","getRequest","get","headers","Authorization","token","result","data","error","id","itineraries","localStorage","getItem"],"mappings":"qWAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,gBAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,qBAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,kBAAxB,CAGA,cAAe,SAASC,CAAAA,SAAT,EAAqB,CAChC,MAAO,UAAAC,QAAQ,CAAI,CACf,GAAMC,CAAAA,UAAU,0FAAG,yKACMN,CAAAA,KAAK,CAACO,GAAN,CAAU,mDAAV,CAA+D,CAChFC,OAAO,CAAE,CACLC,aAAa,kBAAYC,KAAZ,CADR,CADuE,CAA/D,CADN,QACTC,MADS,eAMRC,IANQ,CAMAD,MANA,CAMRC,IANQ,CAOf,GAAG,CAACA,IAAI,CAACC,KAAT,CAAe,CACX;AACAR,QAAQ,CAACJ,SAAS,CAACW,IAAI,CAACE,EAAN,CAAV,CAAR,CACAT,QAAQ,CAACF,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAE,QAAQ,CAACH,cAAc,CAACU,IAAI,CAACG,WAAN,CAAf,CAAR,CACH,CALD,IAKO,CACHV,QAAQ,CAACF,WAAW,CAAC,KAAD,CAAZ,CAAR,CACH,CAdc,sDAAH,kBAAVG,CAAAA,UAAU,0CAAhB,CAiBA,GAAMI,CAAAA,KAAK,CAAGM,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CACA,GAAGP,KAAH,CAAU,CACNJ,UAAU,GACb,CAFD,IAEO,CACHD,QAAQ,CAACF,WAAW,CAAC,KAAD,CAAZ,CAAR,CACH,CACJ,CAxBD,CAyBH","sourcesContent":["import axios from 'axios'\nimport setUserID from './setUserID.js'\nimport setItineraries from './setItineraries.js'\nimport toggleLogin from './toggleLogin.js'\n\n\nexport default function userSetup() {\n    return dispatch => {\n        const getRequest = async() => {\n            const result = await axios.get('https://traveler-backend.herokuapp.com/auto_login', {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                }\n            }) \n            const {data} = result;  \n            if(!data.error){\n                //setUserID must dispatch first for Show Page useEffect to work properly\n                dispatch(setUserID(data.id));\n                dispatch(toggleLogin(true));\n                dispatch(setItineraries(data.itineraries))\n            } else {\n                dispatch(toggleLogin(false));\n            }  \n        }\n        \n        const token = localStorage.getItem(\"token\");\n        if(token) {\n            getRequest();\n        } else {\n            dispatch(toggleLogin(false));\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}