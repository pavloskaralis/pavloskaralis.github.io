{"ast":null,"code":"import axios from 'axios';\nimport history from '../history.js';\nimport selectItinerary from './selectItinerary.js';\nexport default function getItinerary(userID) {\n  return dispatch => {\n    const splitUrl = window.location.href.split('/');\n    const userIDParam = splitUrl[splitUrl.length - 2];\n    const itineraryID = splitUrl[splitUrl.length - 1];\n\n    const getRequest = async () => {\n      const result = await axios.get(`https://traveler-backend.herokuapp.com/users/${userIDParam}/itineraries/${itineraryID}`);\n      const {\n        data\n      } = result;\n\n      if (!data.error) {\n        //makes url prettier \n        // history.push(`/${data.location}`, null);\n        dispatch(selectItinerary(data));\n      } else {\n        history.push('/');\n      }\n    }; //prevent a user from accessing another user's itinerary\n\n\n    userID === parseFloat(userIDParam) ? getRequest() : history.push('/');\n  };\n}","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/pavloskaralis.github.io/traveler/src/actions/getItinerary.js"],"names":["axios","history","selectItinerary","getItinerary","userID","dispatch","splitUrl","window","location","href","split","userIDParam","length","itineraryID","getRequest","result","get","data","error","push","parseFloat"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AAEA,eAAe,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AACzC,SAAOC,QAAQ,IAAI;AACf,UAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,CAAjB;AACA,UAAMC,WAAW,GAAGL,QAAQ,CAACA,QAAQ,CAACM,MAAT,GAAkB,CAAnB,CAA5B;AACA,UAAMC,WAAW,GAAGP,QAAQ,CAACA,QAAQ,CAACM,MAAT,GAAkB,CAAnB,CAA5B;;AAEA,UAAME,UAAU,GAAG,YAAW;AAC1B,YAAMC,MAAM,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,gDAA+CL,WAAY,gBAAeE,WAAY,EAAjG,CAArB;AACA,YAAM;AAACI,QAAAA;AAAD,UAASF,MAAf;;AACA,UAAG,CAACE,IAAI,CAACC,KAAT,EAAe;AACX;AACA;AACDb,QAAAA,QAAQ,CAACH,eAAe,CAACe,IAAD,CAAhB,CAAR;AACF,OAJD,MAIO;AACHhB,QAAAA,OAAO,CAACkB,IAAR,CAAa,GAAb;AACH;AACJ,KAVD,CALe,CAgBf;;;AACAf,IAAAA,MAAM,KAAKgB,UAAU,CAACT,WAAD,CAArB,GAAqCG,UAAU,EAA/C,GAAoDb,OAAO,CAACkB,IAAR,CAAa,GAAb,CAApD;AACH,GAlBD;AAmBH","sourcesContent":["import axios from 'axios'\nimport history from '../history.js'\nimport selectItinerary from './selectItinerary.js'\n\nexport default function getItinerary(userID) {\n    return dispatch => {\n        const splitUrl = window.location.href.split('/');\n        const userIDParam = splitUrl[splitUrl.length - 2];\n        const itineraryID = splitUrl[splitUrl.length - 1];\n\n        const getRequest = async() => {\n            const result = await axios.get(`https://traveler-backend.herokuapp.com/users/${userIDParam}/itineraries/${itineraryID}`) \n            const {data} = result;  \n            if(!data.error){\n                //makes url prettier \n                // history.push(`/${data.location}`, null);\n               dispatch(selectItinerary(data));\n            } else {               \n                history.push('/');\n            }  \n        }\n        //prevent a user from accessing another user's itinerary\n        userID === parseFloat(userIDParam) ? getRequest() : history.push('/'); \n    }\n}"]},"metadata":{},"sourceType":"module"}