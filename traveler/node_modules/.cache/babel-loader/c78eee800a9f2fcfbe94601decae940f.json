{"ast":null,"code":"import axios from 'axios';\nimport toggleError from './toggleError.js';\nimport selectItinerary from './selectItinerary.js';\nimport swapItinerary from './swapItinerary.js';\nexport default function postLookup(itinerary_id, username, index) {\n  return dispatch => {\n    const lookup = {\n      itinerary_id: itinerary_id,\n      username: username\n    };\n\n    const postRequest = async () => {\n      const result = await axios.post('https://traveler-backend.herokuapp.com/lookups', lookup);\n      const {\n        data\n      } = result;\n\n      if (!data.error) {\n        dispatch(selectItinerary(data));\n        const updatedItinerary = {\n          location: data.location,\n          shared: data.shared,\n          id: data.id,\n          //show page uses Planning but index does not\n          dates: data.dates.filter(date => date !== 'Planning')\n        };\n        dispatch(toggleError(''));\n        dispatch(swapItinerary(updatedItinerary, index));\n        if (document.getElementById('addUser')) document.getElementById('addUser').value = '';\n      } else {\n        dispatch(toggleError('User Not Found'));\n      }\n    };\n\n    postRequest();\n  };\n}","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/traveler_frontend/src/actions/postLookup.js"],"names":["axios","toggleError","selectItinerary","swapItinerary","postLookup","itinerary_id","username","index","dispatch","lookup","postRequest","result","post","data","error","updatedItinerary","location","shared","id","dates","filter","date","document","getElementById","value"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AAEA,eAAe,SAASC,UAAT,CAAoBC,YAApB,EAAkCC,QAAlC,EAA4CC,KAA5C,EAAmD;AAC9D,SAAOC,QAAQ,IAAI;AAEf,UAAMC,MAAM,GAAG;AACXJ,MAAAA,YAAY,EAAEA,YADH;AAEXC,MAAAA,QAAQ,EAAEA;AAFC,KAAf;;AAKA,UAAMI,WAAW,GAAG,YAAY;AAC5B,YAAMC,MAAM,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAW,gDAAX,EAA6DH,MAA7D,CAArB;AACA,YAAM;AAACI,QAAAA;AAAD,UAASF,MAAf;;AACA,UAAG,CAACE,IAAI,CAACC,KAAT,EAAe;AACXN,QAAAA,QAAQ,CAACN,eAAe,CAACW,IAAD,CAAhB,CAAR;AACA,cAAME,gBAAgB,GAAG;AACrBC,UAAAA,QAAQ,EAAEH,IAAI,CAACG,QADM;AAErBC,UAAAA,MAAM,EAAEJ,IAAI,CAACI,MAFQ;AAGrBC,UAAAA,EAAE,EAAEL,IAAI,CAACK,EAHY;AAIrB;AACAC,UAAAA,KAAK,EAAEN,IAAI,CAACM,KAAL,CAAWC,MAAX,CAAkBC,IAAI,IAAIA,IAAI,KAAK,UAAnC;AALc,SAAzB;AAOAb,QAAAA,QAAQ,CAACP,WAAW,CAAC,EAAD,CAAZ,CAAR;AACAO,QAAAA,QAAQ,CAACL,aAAa,CAACY,gBAAD,EAAmBR,KAAnB,CAAd,CAAR;AACA,YAAGe,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAH,EAAuCD,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,GAAyC,EAAzC;AAC1C,OAZD,MAYO;AACHhB,QAAAA,QAAQ,CAACP,WAAW,CAAC,gBAAD,CAAZ,CAAR;AACH;AACJ,KAlBD;;AAoBAS,IAAAA,WAAW;AACd,GA5BD;AA6BH","sourcesContent":["import axios from 'axios'\nimport toggleError from './toggleError.js'\nimport selectItinerary from './selectItinerary.js'\nimport swapItinerary from './swapItinerary.js'\n\nexport default function postLookup(itinerary_id, username, index) {\n    return dispatch => {\n\n        const lookup = {\n            itinerary_id: itinerary_id,\n            username: username\n        }\n    \n        const postRequest = async () => {\n            const result = await axios.post('https://traveler-backend.herokuapp.com/lookups', lookup);  \n            const {data} = result;  \n            if(!data.error){\n                dispatch(selectItinerary(data));\n                const updatedItinerary = {\n                    location: data.location,\n                    shared: data.shared,\n                    id: data.id,\n                    //show page uses Planning but index does not\n                    dates: data.dates.filter(date => date !== 'Planning')\n                }\n                dispatch(toggleError(''));\n                dispatch(swapItinerary(updatedItinerary, index));\n                if(document.getElementById('addUser')) document.getElementById('addUser').value='';\n            } else {               \n                dispatch(toggleError('User Not Found'))\n            }  \n        }\n\n        postRequest();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}