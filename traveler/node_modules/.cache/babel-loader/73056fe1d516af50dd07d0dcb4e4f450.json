{"ast":null,"code":"var _jsxFileName = \"/Users/pavloskaralis/Desktop/pavloskaralis.github.io/traveler/src/components/Itinerary.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport sharedIcon from '../images/shared.png';\nimport sharedHoverIcon from '../images/sharedhover.png';\nimport editIcon from '../images/edit.png';\nimport editHoverIcon from '../images/edithover.png';\nimport toggleForm from '../actions/toggleForm.js';\nimport selectItinerary from '../actions/selectItinerary.js';\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    font-weight: 600;\n    font-family: Verdana;\n    cursor: pointer;\n    white-space: nowrap;\n    min-width: ${props => props.width};\n\n`;\nconst Location = styled(Container)`\n    color: ${props => props.theme.black};\n    padding-right: 4px;\n    width: 21.5%;\n    overflow-x: hidden;\n    text-transform: capitalize;\n    font-weight: 600;\n    text-shadow: none;\n    font-size: 18px;\n\n    &:hover {\n        color: ${props => props.theme.orange};\n    }\n\n    & span {\n        width: 100%;\n        display:block;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        -o-text-overflow: ellipsis;\n    }\n`;\nconst Shared = styled(Container)`\n    background-image: ${props => props.shared ? `url(${sharedIcon})` : 'none'};\n    background-size: 45px;\n    background-repeat: no-repeat;\n    background-position: left;\n    background-position-x: 22px;\n    min-width: 20%;\n`;\nconst Edit = styled(Container)`\n    background-image: url(${editIcon});\n    background-size: 36px;\n    background-repeat: no-repeat;\n    background-position: center; \n    width: 50px;\n    height: 50px;\n    border-radius: 50px;\n    cursor: pointer;\n    margin-left: 4px;\n\n    &:hover {\n        background-color: ${props => props.theme.gray};\n    }\n`;\nconst Wrapper = styled.a`\n    text-decoration-line: none;\n    width: 100%;\n    min-width: 500px;\n    padding-left: 8%;\n    min-height: 90px; \n    display: flex;\n    border-bottom: 1px solid ${props => props.theme.gray};\n    box-sizing: border-box;\n    cursor: pointer;\n    color: ${props => props.theme.gray};\n    background-color: white;\n\n    &:hover {\n        background-color: ${props => props.theme.black};\n        color: white;\n        border-bottom: 1px solid ${props => props.theme.black};\n        z-index: 1;\n    }\n\n    &:hover ${Location} {\n        color: ${props => props.theme.orange};\n    }\n\n    &:hover ${Edit} {\n        background-image: url(${editHoverIcon});\n    }\n\n    &:hover ${Shared} {\n        background-image: ${props => props.shared ? `url(${sharedHoverIcon})` : 'none'};\n    }\n`;\n\nconst mapStateToProps = state => {\n  return {\n    userID: state.userID\n  };\n};\n\nconst mapDispatchToProps = {\n  toggleForm,\n  selectItinerary\n};\n\nlet Itinerary = ({\n  itinerary,\n  toggleForm,\n  selectItinerary,\n  index,\n  userID\n}) => {\n  const length = itinerary.dates.length;\n  return (\n    /*#__PURE__*/\n    React.createElement(Wrapper, {\n      href: `/${userID}/${itinerary.id}`,\n      shared: itinerary.shared,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Location, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }\n    }, itinerary.location)),\n    /*#__PURE__*/\n    React.createElement(Shared, {\n      shared: itinerary.shared,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Container, {\n      width: \"20.5%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, itinerary.dates[0]),\n    /*#__PURE__*/\n    React.createElement(Container, {\n      width: \"20.5%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, itinerary.dates[length - 1]),\n    /*#__PURE__*/\n    React.createElement(Container, {\n      width: \"16%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Edit, {\n      onClick: e => {\n        e.preventDefault();\n        selectItinerary({ ...itinerary,\n          index: index\n        });\n        toggleForm('update');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    })))\n  );\n};\n\nItinerary = connect(mapStateToProps, mapDispatchToProps)(Itinerary);\nexport default Itinerary;","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/pavloskaralis.github.io/traveler/src/components/Itinerary.js"],"names":["React","connect","styled","sharedIcon","sharedHoverIcon","editIcon","editHoverIcon","toggleForm","selectItinerary","Container","div","props","width","Location","theme","black","orange","Shared","shared","Edit","gray","Wrapper","a","mapStateToProps","state","userID","mapDispatchToProps","Itinerary","itinerary","index","length","dates","id","location","e","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport sharedIcon from '../images/shared.png'\nimport sharedHoverIcon from '../images/sharedhover.png'\nimport editIcon from '../images/edit.png'\nimport editHoverIcon from '../images/edithover.png'\nimport toggleForm from '../actions/toggleForm.js'\nimport selectItinerary from '../actions/selectItinerary.js'\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    font-weight: 600;\n    font-family: Verdana;\n    cursor: pointer;\n    white-space: nowrap;\n    min-width: ${props => props.width};\n\n`;\n\nconst Location = styled(Container)`\n    color: ${props => props.theme.black};\n    padding-right: 4px;\n    width: 21.5%;\n    overflow-x: hidden;\n    text-transform: capitalize;\n    font-weight: 600;\n    text-shadow: none;\n    font-size: 18px;\n\n    &:hover {\n        color: ${props => props.theme.orange};\n    }\n\n    & span {\n        width: 100%;\n        display:block;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        -o-text-overflow: ellipsis;\n    }\n`;\n\nconst Shared = styled(Container)`\n    background-image: ${props => props.shared ? `url(${sharedIcon})` : 'none'};\n    background-size: 45px;\n    background-repeat: no-repeat;\n    background-position: left;\n    background-position-x: 22px;\n    min-width: 20%;\n`;\n\nconst Edit = styled(Container)`\n    background-image: url(${editIcon});\n    background-size: 36px;\n    background-repeat: no-repeat;\n    background-position: center; \n    width: 50px;\n    height: 50px;\n    border-radius: 50px;\n    cursor: pointer;\n    margin-left: 4px;\n\n    &:hover {\n        background-color: ${props => props.theme.gray};\n    }\n`;\n\nconst Wrapper = styled.a`\n    text-decoration-line: none;\n    width: 100%;\n    min-width: 500px;\n    padding-left: 8%;\n    min-height: 90px; \n    display: flex;\n    border-bottom: 1px solid ${props => props.theme.gray};\n    box-sizing: border-box;\n    cursor: pointer;\n    color: ${props => props.theme.gray};\n    background-color: white;\n\n    &:hover {\n        background-color: ${props => props.theme.black};\n        color: white;\n        border-bottom: 1px solid ${props => props.theme.black};\n        z-index: 1;\n    }\n\n    &:hover ${Location} {\n        color: ${props => props.theme.orange};\n    }\n\n    &:hover ${Edit} {\n        background-image: url(${editHoverIcon});\n    }\n\n    &:hover ${Shared} {\n        background-image: ${props => props.shared ? `url(${sharedHoverIcon})` : 'none'};\n    }\n`;\n\nconst mapStateToProps = state => {\n    return {\n      userID: state.userID\n    }\n}\nconst mapDispatchToProps = {\n    toggleForm,\n    selectItinerary\n}\n\nlet Itinerary = ({itinerary, toggleForm, selectItinerary, index, userID}) => {\n    const length = itinerary.dates.length\n    return (\n        <Wrapper href={`/${userID}/${itinerary.id}`} shared={itinerary.shared}>\n            {/* span css uses ellipsis to prevent overflow */}\n            <Location><span>{itinerary.location}</span></Location>\n            <Shared shared={itinerary.shared}/>\n            <Container width='20.5%'>{itinerary.dates[0]}</Container>\n            <Container width='20.5%'>{itinerary.dates[length - 1]}</Container>\n            <Container width='16%'>\n                {/* selectItinerary allows form to access specific itinerary through state */}\n                <Edit onClick={e => {e.preventDefault(); selectItinerary({...itinerary, index: index});toggleForm('update')}}/>\n            </Container>\n        </Wrapper>\n    )\n}\n\nItinerary = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Itinerary)\n\nexport default Itinerary\n\n  "]},"metadata":{},"sourceType":"module"}