{"ast":null,"code":"var _jsxFileName = \"/Users/pavloskaralis/Desktop/traveler_frontend/src/components/Button.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport history from '../history.js';\nimport toggleForm from '../actions/toggleForm.js';\nimport selectItinerary from '../actions/selectItinerary.js';\nconst ButtonStyle = styled.div`\n    min-width: 80px;\n    height: 40px;\n    border-radius: 8px;\n    background-color: ${props => props.theme.black};\n    color: ${props => props.theme.orange};\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background-position: center;\n    background-repeat: no-repeat;\n    cursor: pointer;\n    background-image: ${props => `url(${props.image})`};\n    background-size: ${props => props.size};\n    margin-right: ${props => props.margin ? '6px' : '0'};\n    &:hover {\n        background-color: ${props => props.theme.blackHover};\n    }\n\n    @media (max-width: 500px) {\n        min-width: 60px;\n        max-width: 60px;\n    }\n`;\nconst mapDispatchToProps = {\n  toggleForm,\n  selectItinerary\n};\n\nlet Button = ({\n  type,\n  toggleForm,\n  selectItinerary,\n  image,\n  size,\n  margin\n}) => {\n  // all buttons except back toggle form\n  const onClick = type === 'return' ? () => {\n    history.push('/');\n    selectItinerary('');\n  } : () => toggleForm(type);\n  return React.createElement(ButtonStyle, {\n    onClick: onClick,\n    image: image,\n    size: size,\n    margin: margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  });\n};\n\nButton = connect(null, mapDispatchToProps)(Button);\nexport default Button;","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/traveler_frontend/src/components/Button.js"],"names":["React","connect","styled","history","toggleForm","selectItinerary","ButtonStyle","div","props","theme","black","orange","image","size","margin","blackHover","mapDispatchToProps","Button","type","onClick","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AAGA,MAAMC,WAAW,GAAGJ,MAAM,CAACK,GAAI;;;;wBAIPC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,KAAM;aACtCF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,MAAO;;;;;;;wBAOjBH,KAAK,IAAK,OAAMA,KAAK,CAACI,KAAM,GAAG;uBAChCJ,KAAK,IAAIA,KAAK,CAACK,IAAK;oBACvBL,KAAK,IAAIA,KAAK,CAACM,MAAN,GAAe,KAAf,GAAuB,GAAI;;4BAE5BN,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYM,UAAW;;;;;;;CAhB5D;AA0BA,MAAMC,kBAAkB,GAAG;AACvBZ,EAAAA,UADuB;AAEvBC,EAAAA;AAFuB,CAA3B;;AAMA,IAAIY,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOd,EAAAA,UAAP;AAAmBC,EAAAA,eAAnB;AAAoCO,EAAAA,KAApC;AAA2CC,EAAAA,IAA3C;AAAiDC,EAAAA;AAAjD,CAAD,KAA8D;AACtE;AACD,QAAMK,OAAO,GAAGD,IAAI,KAAK,QAAT,GAAoB,MAAK;AAACf,IAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AAAkBf,IAAAA,eAAe,CAAC,EAAD,CAAf;AAAoB,GAAhE,GAAmE,MAAKD,UAAU,CAACc,IAAD,CAAlG;AACA,SACI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAGC,OAAvB;AAAiC,IAAA,KAAK,EAAEP,KAAxC;AAA+C,IAAA,IAAI,EAAEC,IAArD;AAA2D,IAAA,MAAM,EAAEC,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAND;;AAQAG,MAAM,GAAGhB,OAAO,CACZ,IADY,EAEZe,kBAFY,CAAP,CAGPC,MAHO,CAAT;AAKA,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport history from '../history.js'\nimport toggleForm from '../actions/toggleForm.js';\nimport selectItinerary from '../actions/selectItinerary.js';\n\n\nconst ButtonStyle = styled.div`\n    min-width: 80px;\n    height: 40px;\n    border-radius: 8px;\n    background-color: ${props => props.theme.black};\n    color: ${props => props.theme.orange};\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    background-position: center;\n    background-repeat: no-repeat;\n    cursor: pointer;\n    background-image: ${props => `url(${props.image})`};\n    background-size: ${props => props.size};\n    margin-right: ${props => props.margin ? '6px' : '0'};\n    &:hover {\n        background-color: ${props => props.theme.blackHover};\n    }\n\n    @media (max-width: 500px) {\n        min-width: 60px;\n        max-width: 60px;\n    }\n`;\n\n\nconst mapDispatchToProps = {\n    toggleForm,\n    selectItinerary\n}\n\n\nlet Button = ({type, toggleForm, selectItinerary, image, size, margin}) => {\n     // all buttons except back toggle form\n    const onClick = type === 'return' ? ()=> {history.push('/');selectItinerary('')} : ()=> toggleForm(type);\n    return (\n        <ButtonStyle onClick={ onClick } image={image} size={size} margin={margin}></ButtonStyle>\n    )\n}\n\nButton = connect(\n    null,\n    mapDispatchToProps\n)(Button)\n\nexport default Button\n\n  "]},"metadata":{},"sourceType":"module"}