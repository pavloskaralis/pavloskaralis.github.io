{"ast":null,"code":"var _jsxFileName = \"/Users/pavloskaralis/Desktop/pavloskaralis.github.io/traveler/src/components/Show.js\";\nimport React, { useEffect, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport rowIcon from '../images/row.png';\nimport getItinerary from '../actions/getItinerary.js';\nimport postPlanningRow from '../actions/postPlanningRow.js';\nimport postSchedulingRow from '../actions/postSchedulingRow.js';\nimport toggleDropdown from '../actions/toggleDropdown.js';\nimport Tools from './Tools.js';\nimport Row from './Row.js';\nimport Form from './Form.js';\nconst Wrapper = styled.div`\n    width: 100%;\n    height: calc(100vh - 60px);\n    display: flex;\n    flex-direction: column;\n    background-color: ${props => props.theme.cream}; \n`;\nconst Table = styled.div`\n    margin:0 auto; \n    max-width: 1200px;\n    min-width: 300px; \n    width: 100%; \n    overflow: auto;\n    height: calc(100% - 120px); \n    background-color: white; \n    display: table-row-group;\n    box-sizing: border-box;\n    box-shadow: 0 0 4px 0 rgba(0,0,0,.5);\n    ::-webkit-scrollbar {\n        width: 8px;    \n        height: 8px;\n        background-color: ${props => props.theme.gray};\n      }\n      ::-webkit-scrollbar-thumb {\n          background-color: ${props => props.theme.black};   \n      }\n`;\nconst Head = styled.div`\n    max-width: 1200px;\n    min-width: 768px;\n    box-sizing: border-box;\n    min-height: 60px;\n    display: flex;\n    padding: 0 8px;\n    background-color: ${props => props.theme.black};\n    text-transform: capitalize;\n`;\nconst Body = styled.div`\n    max-width: 1200px;\n    min-width: 768px;\n    box-sizing: border-box;\n    min-height: calc(100% - 120px);\n    height: calc(100% - 120px);\n    overflow-y: auto;\n    overflow-x: hidden;\n\n    ::-webkit-scrollbar {\n        width: 8px;    \n        height: 8px;\n        background-color: ${props => props.theme.gray};\n      }\n      ::-webkit-scrollbar-thumb {\n          background-color: ${props => props.theme.black};   \n      }\n`;\nconst TH = styled.div`\n    cursor: default;\n    color: ${props => props.orange ? props.theme.orange : 'white'}; \n    font-weight: 600;\n    box-sizing: border-box;\n    min-height: 60px;\n    width: 16.67%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    font-family: Verdana;\n`;\nconst AddRow = styled.div`\n    position: fixed;\n    align-self: auto;\n    max-width: 1200px;\n    width: 100%;\n    min-height: 60px; \n    justify-self: flex-end;\n    min-height: 60px;\n    background-image: url(${rowIcon});\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: 35px;\n    background-color: ${props => props.theme.black};\n    overflow: hidden;\n    cursor: pointer;\n\n    &:hover {\n        background-color: ${props => props.theme.blackHover};\n    }\n`;\nconst Empty = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center; \n\n    & div {\n        position: fixed;\n        width: 100%;\n        text-align: center;\n        color: ${props => props.theme.gray};\n        font-family: Verdana;\n        font-weight: 600;\n        max-width: 1200px;\n    }\n`;\n\nconst mapStateToProps = state => {\n  return {\n    dropdown: state.dropdown,\n    form: state.form,\n    userID: state.userID,\n    itinerary: state.itinerary,\n    table: state.table\n  };\n};\n\nconst mapDispatchToProps = {\n  getItinerary,\n  postPlanningRow,\n  postSchedulingRow,\n  toggleDropdown\n};\n\nlet Show = ({\n  dropdown,\n  toggleDropdown,\n  form,\n  getItinerary,\n  postPlanningRow,\n  postSchedulingRow,\n  userID,\n  itinerary,\n  table\n}) => {\n  //pass userID to ensure user is associated with itineraryID in url param\n  useEffect(() => {\n    getItinerary(userID);\n  }, []);\n  if (itinerary) console.log('itinerary', itinerary.scheduling_rows); // auto scroll to bottom on row creation; passed to add-row onClick\n\n  const autoScroll = () => setTimeout(() => document.querySelector('#body').scrollTop = document.querySelector('#body').scrollHeight, 100);\n\n  return (\n    /*#__PURE__*/\n    // dropdown off focus click\n    React.createElement(Wrapper, {\n      onClick: () => {\n        if (dropdown) toggleDropdown(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, form &&\n    /*#__PURE__*/\n    React.createElement(Form, {\n      page: \"show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 22\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Tools, {\n      page: \"show\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TH, {\n      orange: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, table === 'Planning' ? 'Activity' : 'Time'),\n    /*#__PURE__*/\n    React.createElement(TH, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, table === 'Planning' ? 'Type' : 'Activity'),\n    /*#__PURE__*/\n    React.createElement(TH, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, table === 'Planning' ? 'Address' : 'Type'),\n    /*#__PURE__*/\n    React.createElement(TH, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, table === 'Planning' ? 'Website' : 'Address'),\n    /*#__PURE__*/\n    React.createElement(TH, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, table === 'Planning' ? 'Interest' : 'Website'),\n    /*#__PURE__*/\n    React.createElement(TH, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, table === 'Planning' ? 'Schedule' : 'Remove')),\n    /*#__PURE__*/\n    React.createElement(Body, {\n      id: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, itinerary.planning_rows && table === 'Planning' && itinerary.planning_rows.sort((a, b) => a.id - b.id).map(planningRow => {\n      return (\n        /*#__PURE__*/\n        React.createElement(Row, {\n          rowType: \"planning\",\n          row: planningRow,\n          key: planningRow.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }\n        })\n      );\n    }), itinerary && table !== 'Planning' && itinerary.scheduling_rows.filter(row => row.date === table).length === 0 &&\n    /*#__PURE__*/\n    React.createElement(Empty, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }, \"You Have Nothing Scheduled On This Date\")), itinerary.scheduling_rows && table !== 'Planning' && itinerary.scheduling_rows.sort((a, b) => (parseFloat(a.time.replace(':', '')) || 2500) - (parseFloat(b.time.replace(':', '')) || 2500)).map(schedulingRow => {\n      return (// only render matching dates\n        table === schedulingRow.date &&\n        /*#__PURE__*/\n        React.createElement(Row, {\n          rowType: \"scheduling\",\n          row: schedulingRow,\n          key: schedulingRow.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 63\n          }\n        })\n      );\n    })),\n    /*#__PURE__*/\n    React.createElement(AddRow, {\n      onClick: table !== 'Planning' ? () => {\n        postSchedulingRow(itinerary.id, table);\n        ;\n        autoScroll();\n      } : () => {\n        postPlanningRow(itinerary.id);\n        autoScroll();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    })))\n  );\n};\n\nShow = connect(mapStateToProps, mapDispatchToProps)(Show);\nexport default Show;","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/pavloskaralis.github.io/traveler/src/components/Show.js"],"names":["React","useEffect","useCallback","connect","styled","rowIcon","getItinerary","postPlanningRow","postSchedulingRow","toggleDropdown","Tools","Row","Form","Wrapper","div","props","theme","cream","Table","gray","black","Head","Body","TH","orange","AddRow","blackHover","Empty","mapStateToProps","state","dropdown","form","userID","itinerary","table","mapDispatchToProps","Show","console","log","scheduling_rows","autoScroll","setTimeout","document","querySelector","scrollTop","scrollHeight","planning_rows","sort","a","b","id","map","planningRow","filter","row","date","length","parseFloat","time","replace","schedulingRow"],"mappings":"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","sourcesContent":["import React, {useEffect, useCallback} from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport rowIcon from '../images/row.png'\nimport getItinerary from '../actions/getItinerary.js'\nimport postPlanningRow from '../actions/postPlanningRow.js'\nimport postSchedulingRow from '../actions/postSchedulingRow.js'\nimport toggleDropdown from '../actions/toggleDropdown.js'\nimport Tools from './Tools.js'\nimport Row from './Row.js'\nimport Form from './Form.js'\n\nconst Wrapper = styled.div`\n    width: 100%;\n    height: calc(100vh - 60px);\n    display: flex;\n    flex-direction: column;\n    background-color: ${props => props.theme.cream}; \n`;\n\nconst Table = styled.div`\n    margin:0 auto; \n    max-width: 1200px;\n    min-width: 300px; \n    width: 100%; \n    overflow: auto;\n    height: calc(100% - 120px); \n    background-color: white; \n    display: table-row-group;\n    box-sizing: border-box;\n    box-shadow: 0 0 4px 0 rgba(0,0,0,.5);\n    ::-webkit-scrollbar {\n        width: 8px;    \n        height: 8px;\n        background-color: ${props => props.theme.gray};\n      }\n      ::-webkit-scrollbar-thumb {\n          background-color: ${props => props.theme.black};   \n      }\n`;\n\nconst Head = styled.div`\n    max-width: 1200px;\n    min-width: 768px;\n    box-sizing: border-box;\n    min-height: 60px;\n    display: flex;\n    padding: 0 8px;\n    background-color: ${props => props.theme.black};\n    text-transform: capitalize;\n`;\n\nconst Body = styled.div`\n    max-width: 1200px;\n    min-width: 768px;\n    box-sizing: border-box;\n    min-height: calc(100% - 120px);\n    height: calc(100% - 120px);\n    overflow-y: auto;\n    overflow-x: hidden;\n\n    ::-webkit-scrollbar {\n        width: 8px;    \n        height: 8px;\n        background-color: ${props => props.theme.gray};\n      }\n      ::-webkit-scrollbar-thumb {\n          background-color: ${props => props.theme.black};   \n      }\n`;\n\nconst TH = styled.div`\n    cursor: default;\n    color: ${props => props.orange ? props.theme.orange : 'white'}; \n    font-weight: 600;\n    box-sizing: border-box;\n    min-height: 60px;\n    width: 16.67%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    font-family: Verdana;\n`;\n\nconst AddRow = styled.div`\n    position: fixed;\n    align-self: auto;\n    max-width: 1200px;\n    width: 100%;\n    min-height: 60px; \n    justify-self: flex-end;\n    min-height: 60px;\n    background-image: url(${rowIcon});\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: 35px;\n    background-color: ${props => props.theme.black};\n    overflow: hidden;\n    cursor: pointer;\n\n    &:hover {\n        background-color: ${props => props.theme.blackHover};\n    }\n`;\n\nconst Empty = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center; \n\n    & div {\n        position: fixed;\n        width: 100%;\n        text-align: center;\n        color: ${props => props.theme.gray};\n        font-family: Verdana;\n        font-weight: 600;\n        max-width: 1200px;\n    }\n`;\n\nconst mapStateToProps = state => {\n    return {\n      dropdown: state.dropdown,\n      form: state.form,\n      userID: state.userID,\n      itinerary: state.itinerary,\n      table: state.table\n    }\n}\n\nconst mapDispatchToProps = {\n    getItinerary,\n    postPlanningRow,\n    postSchedulingRow,\n    toggleDropdown\n}\n\nlet Show = ({dropdown, toggleDropdown, form, getItinerary, postPlanningRow, postSchedulingRow, userID, itinerary, table}) => {\n    //pass userID to ensure user is associated with itineraryID in url param\n    useEffect(()=> {\n        getItinerary(userID);\n    },[])\n\n  \n    if(itinerary) console.log('itinerary', itinerary.scheduling_rows)\n    // auto scroll to bottom on row creation; passed to add-row onClick\n    const autoScroll = () => setTimeout(()=>document.querySelector('#body').scrollTop = document.querySelector('#body').scrollHeight, 100);\n    return (\n        // dropdown off focus click\n        <Wrapper onClick={()=> {if(dropdown)toggleDropdown(false)}}>\n            {form && <Form page='show'/>}\n            <Tools page='show'/>\n            <Table>\n                <Head>\n                    <TH orange>{table === 'Planning' ? 'Activity' : 'Time'}</TH>\n                    <TH>{table === 'Planning' ? 'Type' : 'Activity'}</TH>\n                    <TH>{table === 'Planning' ? 'Address' : 'Type'}</TH>\n                    <TH>{table === 'Planning' ? 'Website' : 'Address'}</TH>\n                    <TH>{table === 'Planning' ? 'Interest' : 'Website'}</TH>\n                    <TH>{table === 'Planning' ? 'Schedule' : 'Remove'}</TH>\n                </Head>\n                <Body id='body'>\n                    {/* render planning rows */}\n                    {itinerary.planning_rows && table === 'Planning' && itinerary.planning_rows.sort((a,b) => a.id - b.id).map(planningRow => {\n                        return (\n                            <Row rowType='planning' row={planningRow} key={planningRow.id}/>\n                        )\n                    })}\n\n                    {/* empty schedulowing table messsage */}\n                    { itinerary && table !== 'Planning' && itinerary.scheduling_rows.filter(row => row.date === table).length === 0 &&\n                        <Empty>\n                            <div>You Have Nothing Scheduled On This Date</div>\n                        </Empty>\n                    }\n                    \n                    {/* render scheduling rows */}\n                    {itinerary.scheduling_rows && (table !== 'Planning') && itinerary.scheduling_rows.sort((a,b)=> (parseFloat(a.time.replace(':','')) || 2500)  - (parseFloat(b.time.replace(':','')) || 2500)).map(schedulingRow => {\n                        return (\n                            // only render matching dates\n                            (table === schedulingRow.date) && <Row rowType='scheduling' row={schedulingRow} key={schedulingRow.id}/>\n                        )\n                    })}\n                </Body>\n                {/* create scheduling or planning row based on table */}\n                <AddRow onClick={table !== 'Planning' ? ()=> {postSchedulingRow(itinerary.id, table); ; autoScroll();} : ()=> {postPlanningRow(itinerary.id); autoScroll();}}/>\n            </Table>\n        </Wrapper>\n    )\n}\n\nShow = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Show)\n\nexport default Show\n\n  "]},"metadata":{},"sourceType":"module"}