{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pavloskaralis/Desktop/traveler_frontend/node_modules/@babel/runtime/regenerator\";import axios from'axios';import toggleError from'./toggleError.js';import selectItinerary from'./selectItinerary.js';import swapItinerary from'./swapItinerary.js';export default function postLookup(itinerary_id,username,index){return function(dispatch){var lookup={itinerary_id:itinerary_id,username:username};var postRequest=function postRequest(){var result,data,updatedItinerary;return _regeneratorRuntime.async(function postRequest$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(axios.post('https://traveler-backend.herokuapp.com/lookups',lookup));case 2:result=_context.sent;data=result.data;if(!data.error){dispatch(selectItinerary(data));updatedItinerary={location:data.location,shared:data.shared,id:data.id,//show page uses Planning but index does not\ndates:data.dates.filter(function(date){return date!=='Planning';})};dispatch(toggleError(''));dispatch(swapItinerary(updatedItinerary,index));if(document.getElementById('addUser'))document.getElementById('addUser').value='';}else{dispatch(toggleError('User Not Found'));}case 5:case\"end\":return _context.stop();}}});};postRequest();};}","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/traveler_frontend/src/actions/postLookup.js"],"names":["axios","toggleError","selectItinerary","swapItinerary","postLookup","itinerary_id","username","index","dispatch","lookup","postRequest","post","result","data","error","updatedItinerary","location","shared","id","dates","filter","date","document","getElementById","value"],"mappings":"wHAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,kBAAxB,CACA,MAAOC,CAAAA,eAAP,KAA4B,sBAA5B,CACA,MAAOC,CAAAA,aAAP,KAA0B,oBAA1B,CAEA,cAAe,SAASC,CAAAA,UAAT,CAAoBC,YAApB,CAAkCC,QAAlC,CAA4CC,KAA5C,CAAmD,CAC9D,MAAO,UAAAC,QAAQ,CAAI,CAEf,GAAMC,CAAAA,MAAM,CAAG,CACXJ,YAAY,CAAEA,YADH,CAEXC,QAAQ,CAAEA,QAFC,CAAf,CAKA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,0MACKV,KAAK,CAACW,IAAN,CAAW,gDAAX,CAA6DF,MAA7D,CADL,SACVG,MADU,eAETC,IAFS,CAEDD,MAFC,CAETC,IAFS,CAGhB,GAAG,CAACA,IAAI,CAACC,KAAT,CAAe,CACXN,QAAQ,CAACN,eAAe,CAACW,IAAD,CAAhB,CAAR,CACME,gBAFK,CAEc,CACrBC,QAAQ,CAAEH,IAAI,CAACG,QADM,CAErBC,MAAM,CAAEJ,IAAI,CAACI,MAFQ,CAGrBC,EAAE,CAAEL,IAAI,CAACK,EAHY,CAIrB;AACAC,KAAK,CAAEN,IAAI,CAACM,KAAL,CAAWC,MAAX,CAAkB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,GAAK,UAAb,EAAtB,CALc,CAFd,CASXb,QAAQ,CAACP,WAAW,CAAC,EAAD,CAAZ,CAAR,CACAO,QAAQ,CAACL,aAAa,CAACY,gBAAD,CAAmBR,KAAnB,CAAd,CAAR,CACA,GAAGe,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAH,CAAuCD,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,CAAyC,EAAzC,CAC1C,CAZD,IAYO,CACHhB,QAAQ,CAACP,WAAW,CAAC,gBAAD,CAAZ,CAAR,CACH,CAjBe,8CAApB,CAoBAS,WAAW,GACd,CA5BD,CA6BH","sourcesContent":["import axios from 'axios'\nimport toggleError from './toggleError.js'\nimport selectItinerary from './selectItinerary.js'\nimport swapItinerary from './swapItinerary.js'\n\nexport default function postLookup(itinerary_id, username, index) {\n    return dispatch => {\n\n        const lookup = {\n            itinerary_id: itinerary_id,\n            username: username\n        }\n    \n        const postRequest = async () => {\n            const result = await axios.post('https://traveler-backend.herokuapp.com/lookups', lookup);  \n            const {data} = result;  \n            if(!data.error){\n                dispatch(selectItinerary(data));\n                const updatedItinerary = {\n                    location: data.location,\n                    shared: data.shared,\n                    id: data.id,\n                    //show page uses Planning but index does not\n                    dates: data.dates.filter(date => date !== 'Planning')\n                }\n                dispatch(toggleError(''));\n                dispatch(swapItinerary(updatedItinerary, index));\n                if(document.getElementById('addUser')) document.getElementById('addUser').value='';\n            } else {               \n                dispatch(toggleError('User Not Found'))\n            }  \n        }\n\n        postRequest();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}