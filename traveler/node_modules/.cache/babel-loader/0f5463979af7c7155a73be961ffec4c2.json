{"ast":null,"code":"export default function itinerary(state = '', action) {\n  switch (action.type) {\n    case 'SELECT_ITINERARY':\n      return action.itinerary;\n\n    case 'ADD_PLANNING':\n      return { ...state,\n        planning_rows: [...state.planning_rows, action.planning_row]\n      };\n\n    case 'ADD_SCHEDULING':\n      return { ...state,\n        scheduling_rows: [...state.scheduling_rows, action.scheduling_row]\n      };\n\n    case 'SWAP_PLANNING':\n      let planning_index = state.planning_rows.findIndex(planning_row => planning_row.id === action.id);\n      return { ...state,\n        planning_rows: [...state.planning_rows.slice(0, planning_index), action.planning_row, ...state.planning_rows.slice(planning_index + 1)]\n      };\n\n    case 'SWAP_SCHEDULING':\n      let scheduling_index = state.scheduling_rows.findIndex(scheduling_row => scheduling_row.id === action.id);\n      return { ...state,\n        scheduling_rows: [...state.scheduling_rows.slice(0, scheduling_index), action.scheduling_row, ...state.scheduling_rows.slice(scheduling_index + 1)]\n      };\n\n    case 'REMOVE_SCHEDULING':\n      return { ...state,\n        scheduling_rows: state.scheduling_rows.filter(scheduling_row => scheduling_row.id !== action.id)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/traveler_frontend/src/reducers/itinerary.js"],"names":["itinerary","state","action","type","planning_rows","planning_row","scheduling_rows","scheduling_row","planning_index","findIndex","id","slice","scheduling_index","filter"],"mappings":"AAAA,eAAe,SAASA,SAAT,CAAmBC,KAAK,GAAG,EAA3B,EAA+BC,MAA/B,EAAuC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,kBAAL;AACI,aAAOD,MAAM,CAACF,SAAd;;AACJ,SAAK,cAAL;AACI,aAAO,EAAC,GAAGC,KAAJ;AAAWG,QAAAA,aAAa,EAAE,CAAC,GAAGH,KAAK,CAACG,aAAV,EAAwBF,MAAM,CAACG,YAA/B;AAA1B,OAAP;;AACJ,SAAK,gBAAL;AACI,aAAO,EAAC,GAAGJ,KAAJ;AAAWK,QAAAA,eAAe,EAAE,CAAC,GAAGL,KAAK,CAACK,eAAV,EAA0BJ,MAAM,CAACK,cAAjC;AAA5B,OAAP;;AACJ,SAAK,eAAL;AACI,UAAIC,cAAc,GAAGP,KAAK,CAACG,aAAN,CAAoBK,SAApB,CAA8BJ,YAAY,IAAIA,YAAY,CAACK,EAAb,KAAoBR,MAAM,CAACQ,EAAzE,CAArB;AACA,aAAO,EAAC,GAAGT,KAAJ;AAAWG,QAAAA,aAAa,EAAE,CAAC,GAAGH,KAAK,CAACG,aAAN,CAAoBO,KAApB,CAA0B,CAA1B,EAA6BH,cAA7B,CAAJ,EAAkDN,MAAM,CAACG,YAAzD,EAAuE,GAAGJ,KAAK,CAACG,aAAN,CAAoBO,KAApB,CAA0BH,cAAc,GAAG,CAA3C,CAA1E;AAA1B,OAAP;;AACJ,SAAK,iBAAL;AACI,UAAII,gBAAgB,GAAGX,KAAK,CAACK,eAAN,CAAsBG,SAAtB,CAAgCF,cAAc,IAAIA,cAAc,CAACG,EAAf,KAAsBR,MAAM,CAACQ,EAA/E,CAAvB;AACA,aAAO,EAAC,GAAGT,KAAJ;AAAWK,QAAAA,eAAe,EAAE,CAAC,GAAGL,KAAK,CAACK,eAAN,CAAsBK,KAAtB,CAA4B,CAA5B,EAA+BC,gBAA/B,CAAJ,EAAsDV,MAAM,CAACK,cAA7D,EAA6E,GAAGN,KAAK,CAACK,eAAN,CAAsBK,KAAtB,CAA4BC,gBAAgB,GAAG,CAA/C,CAAhF;AAA5B,OAAP;;AACJ,SAAK,mBAAL;AACI,aAAO,EAAC,GAAGX,KAAJ;AAAWK,QAAAA,eAAe,EAAEL,KAAK,CAACK,eAAN,CAAsBO,MAAtB,CAA6BN,cAAc,IAAIA,cAAc,CAACG,EAAf,KAAsBR,MAAM,CAACQ,EAA5E;AAA5B,OAAP;;AACJ;AACI,aAAOT,KAAP;AAhBR;AAkBH","sourcesContent":["export default function itinerary(state = '', action) {\n    switch (action.type) {\n        case 'SELECT_ITINERARY':\n            return action.itinerary\n        case 'ADD_PLANNING':\n            return {...state, planning_rows: [...state.planning_rows,action.planning_row]}\n        case 'ADD_SCHEDULING':\n            return {...state, scheduling_rows: [...state.scheduling_rows,action.scheduling_row]}\n        case 'SWAP_PLANNING':\n            let planning_index = state.planning_rows.findIndex(planning_row => planning_row.id === action.id);\n            return {...state, planning_rows: [...state.planning_rows.slice(0, planning_index), action.planning_row, ...state.planning_rows.slice(planning_index + 1)]}\n        case 'SWAP_SCHEDULING':\n            let scheduling_index = state.scheduling_rows.findIndex(scheduling_row => scheduling_row.id === action.id);\n            return {...state, scheduling_rows: [...state.scheduling_rows.slice(0, scheduling_index), action.scheduling_row, ...state.scheduling_rows.slice(scheduling_index + 1)] }\n        case 'REMOVE_SCHEDULING':\n            return {...state, scheduling_rows: state.scheduling_rows.filter(scheduling_row => scheduling_row.id !== action.id)}\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}