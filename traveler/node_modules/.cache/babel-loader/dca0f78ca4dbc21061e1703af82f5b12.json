{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/pavloskaralis/Desktop/traveler_frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject7(){var data=_taggedTemplateLiteral([\"\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center; \\n\\n    & div {\\n        position: fixed;\\n        width: 100%;\\n        text-align: center;\\n        color: \",\";\\n        font-family: Verdana;\\n        font-weight: 600;\\n        max-width: 1200px;\\n    }\\n\"]);_templateObject7=function _templateObject7(){return data;};return data;}function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n    position: fixed;\\n    align-self: auto;\\n    max-width: 1200px;\\n    width: 100%;\\n    min-height: 60px; \\n    justify-self: flex-end;\\n    min-height: 60px;\\n    background-image: url(\",\");\\n    background-position: center;\\n    background-repeat: no-repeat;\\n    background-size: 35px;\\n    background-color: \",\";\\n    overflow: hidden;\\n    cursor: pointer;\\n\\n    &:hover {\\n        background-color: \",\";\\n    }\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n    cursor: default;\\n    color: \",\"; \\n    font-weight: 600;\\n    box-sizing: border-box;\\n    min-height: 60px;\\n    width: 16.67%;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    text-align: center;\\n    font-family: Verdana;\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n    max-width: 1200px;\\n    min-width: 768px;\\n    box-sizing: border-box;\\n    min-height: calc(100% - 120px);\\n    height: calc(100% - 120px);\\n    overflow-y: auto;\\n    overflow-x: hidden;\\n\\n    ::-webkit-scrollbar {\\n        width: 8px;    \\n        height: 8px;\\n        background-color: \",\";\\n      }\\n      ::-webkit-scrollbar-thumb {\\n          background-color: \",\";   \\n      }\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n    max-width: 1200px;\\n    min-width: 768px;\\n    box-sizing: border-box;\\n    min-height: 60px;\\n    display: flex;\\n    padding: 0 8px;\\n    background-color: \",\";\\n    text-transform: capitalize;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    margin:0 auto; \\n    max-width: 1200px;\\n    min-width: 300px; \\n    width: 100%; \\n    overflow: auto;\\n    height: calc(100% - 120px); \\n    background-color: white; \\n    display: table-row-group;\\n    box-sizing: border-box;\\n    box-shadow: 0 0 4px 0 rgba(0,0,0,.5);\\n    ::-webkit-scrollbar {\\n        width: 8px;    \\n        height: 8px;\\n        background-color: \",\";\\n      }\\n      ::-webkit-scrollbar-thumb {\\n          background-color: \",\";   \\n      }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    width: 100%;\\n    height: calc(100vh - 60px);\\n    display: flex;\\n    flex-direction: column;\\n    background-color: \",\"; \\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useEffect,useCallback}from'react';import{connect}from'react-redux';import styled from'styled-components';import rowIcon from'../images/row.png';import getItinerary from'../actions/getItinerary.js';import postPlanningRow from'../actions/postPlanningRow.js';import postSchedulingRow from'../actions/postSchedulingRow.js';import toggleDropdown from'../actions/toggleDropdown.js';import Tools from'./Tools.js';import Row from'./Row.js';import Form from'./Form.js';var Wrapper=styled.div(_templateObject(),function(props){return props.theme.cream;});var Table=styled.div(_templateObject2(),function(props){return props.theme.gray;},function(props){return props.theme.black;});var Head=styled.div(_templateObject3(),function(props){return props.theme.black;});var Body=styled.div(_templateObject4(),function(props){return props.theme.gray;},function(props){return props.theme.black;});var TH=styled.div(_templateObject5(),function(props){return props.orange?props.theme.orange:'white';});var AddRow=styled.div(_templateObject6(),rowIcon,function(props){return props.theme.black;},function(props){return props.theme.blackHover;});var Empty=styled.div(_templateObject7(),function(props){return props.theme.gray;});var mapStateToProps=function mapStateToProps(state){return{dropdown:state.dropdown,form:state.form,userID:state.userID,itinerary:state.itinerary,table:state.table};};var mapDispatchToProps={getItinerary:getItinerary,postPlanningRow:postPlanningRow,postSchedulingRow:postSchedulingRow,toggleDropdown:toggleDropdown};var Show=function Show(_ref){var dropdown=_ref.dropdown,toggleDropdown=_ref.toggleDropdown,form=_ref.form,getItinerary=_ref.getItinerary,postPlanningRow=_ref.postPlanningRow,postSchedulingRow=_ref.postSchedulingRow,userID=_ref.userID,itinerary=_ref.itinerary,table=_ref.table;//pass userID to ensure user is associated with itineraryID in url param\nuseEffect(function(){getItinerary(userID);},[]);if(itinerary)console.log('itinerary',itinerary.scheduling_rows);// auto scroll to bottom on row creation; passed to add-row onClick\nvar autoScroll=function autoScroll(){return setTimeout(function(){return document.querySelector('#body').scrollTop=document.querySelector('#body').scrollHeight;},100);};return(// dropdown off focus click\nReact.createElement(Wrapper,{onClick:function onClick(){if(dropdown)toggleDropdown(false);}},form&&React.createElement(Form,{page:\"show\"}),React.createElement(Tools,{page:\"show\"}),React.createElement(Table,null,React.createElement(Head,null,React.createElement(TH,{orange:true},table==='Planning'?'Activity':'Time'),React.createElement(TH,null,table==='Planning'?'Type':'Activity'),React.createElement(TH,null,table==='Planning'?'Address':'Type'),React.createElement(TH,null,table==='Planning'?'Website':'Address'),React.createElement(TH,null,table==='Planning'?'Interest':'Website'),React.createElement(TH,null,table==='Planning'?'Schedule':'Remove')),React.createElement(Body,{id:\"body\"},itinerary.planning_rows&&table==='Planning'&&itinerary.planning_rows.sort(function(a,b){return a.id-b.id;}).map(function(planningRow){return React.createElement(Row,{rowType:\"planning\",row:planningRow,key:planningRow.id});}),itinerary&&table!=='Planning'&&itinerary.scheduling_rows.filter(function(row){return row.date===table;}).length===0&&React.createElement(Empty,null,React.createElement(\"div\",null,\"You Have Nothing Scheduled On This Date\")),itinerary.scheduling_rows&&table!=='Planning'&&itinerary.scheduling_rows.sort(function(a,b){return(parseFloat(a.time.replace(':',''))||2500)-(parseFloat(b.time.replace(':',''))||2500);}).map(function(schedulingRow){return(// only render matching dates\ntable===schedulingRow.date&&React.createElement(Row,{rowType:\"scheduling\",row:schedulingRow,key:schedulingRow.id}));})),React.createElement(AddRow,{onClick:table!=='Planning'?function(){postSchedulingRow(itinerary.id,table);;autoScroll();}:function(){postPlanningRow(itinerary.id);autoScroll();}}))));};Show=connect(mapStateToProps,mapDispatchToProps)(Show);export default Show;","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/traveler_frontend/src/components/Show.js"],"names":["React","useEffect","useCallback","connect","styled","rowIcon","getItinerary","postPlanningRow","postSchedulingRow","toggleDropdown","Tools","Row","Form","Wrapper","div","props","theme","cream","Table","gray","black","Head","Body","TH","orange","AddRow","blackHover","Empty","mapStateToProps","state","dropdown","form","userID","itinerary","table","mapDispatchToProps","Show","console","log","scheduling_rows","autoScroll","setTimeout","document","querySelector","scrollTop","scrollHeight","planning_rows","sort","a","b","id","map","planningRow","filter","row","date","length","parseFloat","time","replace","schedulingRow"],"mappings":"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","sourcesContent":["import React, {useEffect, useCallback} from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport rowIcon from '../images/row.png'\nimport getItinerary from '../actions/getItinerary.js'\nimport postPlanningRow from '../actions/postPlanningRow.js'\nimport postSchedulingRow from '../actions/postSchedulingRow.js'\nimport toggleDropdown from '../actions/toggleDropdown.js'\nimport Tools from './Tools.js'\nimport Row from './Row.js'\nimport Form from './Form.js'\n\nconst Wrapper = styled.div`\n    width: 100%;\n    height: calc(100vh - 60px);\n    display: flex;\n    flex-direction: column;\n    background-color: ${props => props.theme.cream}; \n`;\n\nconst Table = styled.div`\n    margin:0 auto; \n    max-width: 1200px;\n    min-width: 300px; \n    width: 100%; \n    overflow: auto;\n    height: calc(100% - 120px); \n    background-color: white; \n    display: table-row-group;\n    box-sizing: border-box;\n    box-shadow: 0 0 4px 0 rgba(0,0,0,.5);\n    ::-webkit-scrollbar {\n        width: 8px;    \n        height: 8px;\n        background-color: ${props => props.theme.gray};\n      }\n      ::-webkit-scrollbar-thumb {\n          background-color: ${props => props.theme.black};   \n      }\n`;\n\nconst Head = styled.div`\n    max-width: 1200px;\n    min-width: 768px;\n    box-sizing: border-box;\n    min-height: 60px;\n    display: flex;\n    padding: 0 8px;\n    background-color: ${props => props.theme.black};\n    text-transform: capitalize;\n`;\n\nconst Body = styled.div`\n    max-width: 1200px;\n    min-width: 768px;\n    box-sizing: border-box;\n    min-height: calc(100% - 120px);\n    height: calc(100% - 120px);\n    overflow-y: auto;\n    overflow-x: hidden;\n\n    ::-webkit-scrollbar {\n        width: 8px;    \n        height: 8px;\n        background-color: ${props => props.theme.gray};\n      }\n      ::-webkit-scrollbar-thumb {\n          background-color: ${props => props.theme.black};   \n      }\n`;\n\nconst TH = styled.div`\n    cursor: default;\n    color: ${props => props.orange ? props.theme.orange : 'white'}; \n    font-weight: 600;\n    box-sizing: border-box;\n    min-height: 60px;\n    width: 16.67%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    font-family: Verdana;\n`;\n\nconst AddRow = styled.div`\n    position: fixed;\n    align-self: auto;\n    max-width: 1200px;\n    width: 100%;\n    min-height: 60px; \n    justify-self: flex-end;\n    min-height: 60px;\n    background-image: url(${rowIcon});\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: 35px;\n    background-color: ${props => props.theme.black};\n    overflow: hidden;\n    cursor: pointer;\n\n    &:hover {\n        background-color: ${props => props.theme.blackHover};\n    }\n`;\n\nconst Empty = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center; \n\n    & div {\n        position: fixed;\n        width: 100%;\n        text-align: center;\n        color: ${props => props.theme.gray};\n        font-family: Verdana;\n        font-weight: 600;\n        max-width: 1200px;\n    }\n`;\n\nconst mapStateToProps = state => {\n    return {\n      dropdown: state.dropdown,\n      form: state.form,\n      userID: state.userID,\n      itinerary: state.itinerary,\n      table: state.table\n    }\n}\n\nconst mapDispatchToProps = {\n    getItinerary,\n    postPlanningRow,\n    postSchedulingRow,\n    toggleDropdown\n}\n\nlet Show = ({dropdown, toggleDropdown, form, getItinerary, postPlanningRow, postSchedulingRow, userID, itinerary, table}) => {\n    //pass userID to ensure user is associated with itineraryID in url param\n    useEffect(()=> {\n        getItinerary(userID);\n    },[])\n\n  \n    if(itinerary) console.log('itinerary', itinerary.scheduling_rows)\n    // auto scroll to bottom on row creation; passed to add-row onClick\n    const autoScroll = () => setTimeout(()=>document.querySelector('#body').scrollTop = document.querySelector('#body').scrollHeight, 100);\n    return (\n        // dropdown off focus click\n        <Wrapper onClick={()=> {if(dropdown)toggleDropdown(false)}}>\n            {form && <Form page='show'/>}\n            <Tools page='show'/>\n            <Table>\n                <Head>\n                    <TH orange>{table === 'Planning' ? 'Activity' : 'Time'}</TH>\n                    <TH>{table === 'Planning' ? 'Type' : 'Activity'}</TH>\n                    <TH>{table === 'Planning' ? 'Address' : 'Type'}</TH>\n                    <TH>{table === 'Planning' ? 'Website' : 'Address'}</TH>\n                    <TH>{table === 'Planning' ? 'Interest' : 'Website'}</TH>\n                    <TH>{table === 'Planning' ? 'Schedule' : 'Remove'}</TH>\n                </Head>\n                <Body id='body'>\n                    {/* render planning rows */}\n                    {itinerary.planning_rows && table === 'Planning' && itinerary.planning_rows.sort((a,b) => a.id - b.id).map(planningRow => {\n                        return (\n                            <Row rowType='planning' row={planningRow} key={planningRow.id}/>\n                        )\n                    })}\n\n                    {/* empty schedulowing table messsage */}\n                    { itinerary && table !== 'Planning' && itinerary.scheduling_rows.filter(row => row.date === table).length === 0 &&\n                        <Empty>\n                            <div>You Have Nothing Scheduled On This Date</div>\n                        </Empty>\n                    }\n                    \n                    {/* render scheduling rows */}\n                    {itinerary.scheduling_rows && (table !== 'Planning') && itinerary.scheduling_rows.sort((a,b)=> (parseFloat(a.time.replace(':','')) || 2500)  - (parseFloat(b.time.replace(':','')) || 2500)).map(schedulingRow => {\n                        return (\n                            // only render matching dates\n                            (table === schedulingRow.date) && <Row rowType='scheduling' row={schedulingRow} key={schedulingRow.id}/>\n                        )\n                    })}\n                </Body>\n                {/* create scheduling or planning row based on table */}\n                <AddRow onClick={table !== 'Planning' ? ()=> {postSchedulingRow(itinerary.id, table); ; autoScroll();} : ()=> {postPlanningRow(itinerary.id); autoScroll();}}/>\n            </Table>\n        </Wrapper>\n    )\n}\n\nShow = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Show)\n\nexport default Show\n\n  "]},"metadata":{},"sourceType":"module"}