{"ast":null,"code":"var _jsxFileName = \"/Users/pavloskaralis/Desktop/traveler_frontend/src/components/App.js\";\nimport React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport styled, { ThemeProvider } from 'styled-components';\nimport userSetup from '../actions/userSetup.js';\nimport Nav from './Nav.js';\nimport Home from './Home.js';\nimport Index from './Index.js';\nimport Show from './Show.js';\nconst Wrapper = styled.div`\n  min-height: 100vh;\n  width: 100%; \n  box-sizing: border-box;\n  display: flex;         \n  flex-direction: column;\n  ::-webkit-scrollbar {\n    width: 8px;    \n    height: 8px;\n    background-color: ${props => props.theme.gray};\n}\n::-webkit-scrollbar-thumb {\n    background-color: ${props => props.theme.black};   \n}\n  ::-webkit-scrollbar {\n    width: 8px;    \n    height: 8px;\n    background-color: ${props => props.theme.gray};\n  }\n  ::-webkit-scrollbar-thumb {\n      background-color: ${props => props.theme.black};   \n  }\n`;\nconst theme = {\n  black: 'rgb(40, 40, 40)',\n  orange: 'rgb(255,200,0)',\n  blue: 'rgb(0, 190, 235)',\n  cream: 'rgb(235, 225, 220)',\n  gray: 'rgb(120,115,115)',\n  opaque: 'rgba(0,0,0,0)',\n  orangeHover: 'rgb(255,220,20)',\n  grayHover: 'rgb(140, 135, 135)',\n  blackHover: 'rgb(55, 55, 55)'\n};\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = {\n  userSetup\n};\n\nlet App = ({\n  isLoggedIn,\n  userSetup\n}) => {\n  useEffect(userSetup, []);\n  return (\n    /*#__PURE__*/\n    React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, isLoggedIn &&\n    /*#__PURE__*/\n    React.createElement(Route, {\n      path: '/:location',\n      render: () =>\n      /*#__PURE__*/\n      React.createElement(Show, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 66\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 26\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Route, {\n      path: '/',\n      render: () => isLoggedIn === true ?\n      /*#__PURE__*/\n      React.createElement(Index, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 63\n        }\n      }) : isLoggedIn === false ?\n      /*#__PURE__*/\n      React.createElement(Home, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 96\n        }\n      }) : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }))))\n  );\n};\n\nApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport default App;","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/traveler_frontend/src/components/App.js"],"names":["React","useEffect","Route","Switch","connect","styled","ThemeProvider","userSetup","Nav","Home","Index","Show","Wrapper","div","props","theme","gray","black","orange","blue","cream","opaque","orangeHover","grayHover","blackHover","mapStateToProps","state","isLoggedIn","mapDispatchToProps","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,IAAgBC,aAAhB,QAAoC,mBAApC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,MAAMC,OAAO,GAAGP,MAAM,CAACQ,GAAI;;;;;;;;;wBASHC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,IAAK;;;wBAG1BF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,KAAM;;;;;wBAK3BH,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,IAAK;;;0BAGxBF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,KAAM;;CApBrD;AAwBA,MAAMF,KAAK,GAAG;AACVE,EAAAA,KAAK,EAAE,iBADG;AAEVC,EAAAA,MAAM,EAAE,gBAFE;AAGVC,EAAAA,IAAI,EAAE,kBAHI;AAIVC,EAAAA,KAAK,EAAE,oBAJG;AAKVJ,EAAAA,IAAI,EAAE,kBALI;AAMVK,EAAAA,MAAM,EAAE,eANE;AAOVC,EAAAA,WAAW,EAAE,iBAPH;AAQVC,EAAAA,SAAS,EAAE,oBARD;AASVC,EAAAA,UAAU,EAAE;AATF,CAAd;;AAYA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,UAAU,EAAED,KAAK,CAACC;AADb,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAG;AACzBrB,EAAAA;AADyB,CAA3B;;AAIA,IAAIsB,GAAG,GAAG,CAAC;AAACF,EAAAA,UAAD;AAAYpB,EAAAA;AAAZ,CAAD,KAA4B;AACpCN,EAAAA,SAAS,CAACM,SAAD,EAAW,EAAX,CAAT;AAEA;AAAA;AACE,wBAAC,aAAD;AAAe,MAAA,KAAK,EAAEQ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAAA;AAEE,wBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGY,UAAU;AAAA;AAAI,wBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,YAAb;AAA2B,MAAA,MAAM,EAAE;AAAA;AAAK,0BAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjB;AAAA;AAGE,wBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,GAAb;AAAkB,MAAA,MAAM,EAAE,MAAKA,UAAU,KAAK,IAAf;AAAA;AAAqB,0BAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB,GAAgCA,UAAU,KAAK,KAAf;AAAA;AAAsB,0BAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtB,GAAgC,IAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AADF;AAYD,CAfD;;AAiBAE,GAAG,GAAGzB,OAAO,CACXqB,eADW,EAEXG,kBAFW,CAAP,CAGJC,GAHI,CAAN;AAKA,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport styled, {ThemeProvider} from 'styled-components'\nimport userSetup from '../actions/userSetup.js'\nimport Nav from './Nav.js'\nimport Home from './Home.js'\nimport Index from './Index.js'\nimport Show from './Show.js'\n\nconst Wrapper = styled.div`\n  min-height: 100vh;\n  width: 100%; \n  box-sizing: border-box;\n  display: flex;         \n  flex-direction: column;\n  ::-webkit-scrollbar {\n    width: 8px;    \n    height: 8px;\n    background-color: ${props => props.theme.gray};\n}\n::-webkit-scrollbar-thumb {\n    background-color: ${props => props.theme.black};   \n}\n  ::-webkit-scrollbar {\n    width: 8px;    \n    height: 8px;\n    background-color: ${props => props.theme.gray};\n  }\n  ::-webkit-scrollbar-thumb {\n      background-color: ${props => props.theme.black};   \n  }\n`;\n\nconst theme = {\n    black: 'rgb(40, 40, 40)',\n    orange: 'rgb(255,200,0)',\n    blue: 'rgb(0, 190, 235)',\n    cream: 'rgb(235, 225, 220)',\n    gray: 'rgb(120,115,115)',\n    opaque: 'rgba(0,0,0,0)', \n    orangeHover: 'rgb(255,220,20)',\n    grayHover: 'rgb(140, 135, 135)',\n    blackHover: 'rgb(55, 55, 55)',\n};\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.isLoggedIn,\n  }\n}\n\nconst mapDispatchToProps = {\n  userSetup,\n}\n\nlet App = ({isLoggedIn,userSetup}) => {\n  useEffect(userSetup,[])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Wrapper>\n        <Nav/>\n        <Switch>\n          {isLoggedIn && <Route path={'/:location'} render={()=> <Show/>}/>}  \n          {/* null prevents index home page flash */}\n          <Route path={'/'} render={()=> isLoggedIn === true? <Index/> : isLoggedIn === false? <Home/> : null}/>\n        </Switch>\n      </Wrapper>  \n    </ThemeProvider>\n  )\n}\n\nApp = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App) \n\nexport default App\n\n  "]},"metadata":{},"sourceType":"module"}