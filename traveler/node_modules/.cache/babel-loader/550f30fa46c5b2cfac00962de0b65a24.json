{"ast":null,"code":"import axios from 'axios';\nimport setUserID from './setUserID.js';\nimport setItineraries from './setItineraries.js';\nimport toggleError from './toggleError.js';\nimport toggleLogin from './toggleLogin.js';\nimport toggleDropdown from './toggleDropdown.js';\nimport toggleForm from './toggleForm.js';\nexport default function logIn(username, password) {\n  return dispatch => {\n    const user = {\n      username: username,\n      password: password\n    };\n\n    const postRequest = async () => {\n      const result = await axios.post('https://traveler-backend.herokuapp.com/login', user);\n      const {\n        data\n      } = result;\n\n      if (!data.error) {\n        localStorage.setItem(\"token\", data.jwt);\n        dispatch(toggleLogin(true));\n        dispatch(setUserID(data.id));\n        dispatch(setItineraries(data.itineraries));\n        dispatch(toggleError(''));\n        dispatch(toggleDropdown(false));\n        dispatch(toggleForm(''));\n      } else {\n        dispatch(toggleError('Invalid Username/Password'));\n      }\n    };\n\n    postRequest();\n  };\n}","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/traveler_frontend/src/actions/logIn.js"],"names":["axios","setUserID","setItineraries","toggleError","toggleLogin","toggleDropdown","toggleForm","logIn","username","password","dispatch","user","postRequest","result","post","data","error","localStorage","setItem","jwt","id","itineraries"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAGA,eAAe,SAASC,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AAC9C,SAAOC,QAAQ,IAAI;AACf,UAAMC,IAAI,GAAG;AACTH,MAAAA,QAAQ,EAAEA,QADD;AAETC,MAAAA,QAAQ,EAAEA;AAFD,KAAb;;AAIA,UAAMG,WAAW,GAAG,YAAY;AAC5B,YAAMC,MAAM,GAAG,MAAMb,KAAK,CAACc,IAAN,CAAW,8CAAX,EAA2DH,IAA3D,CAArB;AACA,YAAM;AAACI,QAAAA;AAAD,UAASF,MAAf;;AACA,UAAG,CAACE,IAAI,CAACC,KAAT,EAAgB;AACZC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,GAAnC;AACAT,QAAAA,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR;AACAM,QAAAA,QAAQ,CAACT,SAAS,CAACc,IAAI,CAACK,EAAN,CAAV,CAAR;AACAV,QAAAA,QAAQ,CAACR,cAAc,CAACa,IAAI,CAACM,WAAN,CAAf,CAAR;AACAX,QAAAA,QAAQ,CAACP,WAAW,CAAC,EAAD,CAAZ,CAAR;AACAO,QAAAA,QAAQ,CAACL,cAAc,CAAC,KAAD,CAAf,CAAR;AACAK,QAAAA,QAAQ,CAACJ,UAAU,CAAC,EAAD,CAAX,CAAR;AACH,OARD,MAQO;AACHI,QAAAA,QAAQ,CAACP,WAAW,CAAC,2BAAD,CAAZ,CAAR;AACH;AACJ,KAdD;;AAeAS,IAAAA,WAAW;AACd,GArBD;AAsBH","sourcesContent":["import axios from 'axios'\nimport setUserID from './setUserID.js'\nimport setItineraries from './setItineraries.js'\nimport toggleError from './toggleError.js'\nimport toggleLogin from './toggleLogin.js';\nimport toggleDropdown from './toggleDropdown.js';\nimport toggleForm from './toggleForm.js';\n\n\nexport default function logIn(username, password) {\n    return dispatch => {\n        const user = {\n            username: username,\n            password: password\n        }\n        const postRequest = async () => { \n            const result = await axios.post('https://traveler-backend.herokuapp.com/login', user);\n            const {data} = result;\n            if(!data.error) {\n                localStorage.setItem(\"token\", data.jwt)\n                dispatch(toggleLogin(true));\n                dispatch(setUserID(data.id));\n                dispatch(setItineraries(data.itineraries))\n                dispatch(toggleError(''));\n                dispatch(toggleDropdown(false));\n                dispatch(toggleForm(''));\n            } else {\n                dispatch(toggleError('Invalid Username/Password'));\n            }\n        }\n        postRequest();\n    }\n}\n\n\n\n\n\n\n   "]},"metadata":{},"sourceType":"module"}