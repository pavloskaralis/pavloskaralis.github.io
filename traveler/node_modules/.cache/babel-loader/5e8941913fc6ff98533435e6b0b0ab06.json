{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pavloskaralis/Desktop/traveler_frontend/node_modules/@babel/runtime/regenerator\";import axios from'axios';import setUserID from'./setUserID.js';import toggleError from'./toggleError.js';import toggleLogin from'./toggleLogin.js';import toggleDropdown from'./toggleDropdown.js';import toggleForm from'./toggleForm.js';export default function signUp(username,password){return function(dispatch){var newUser={username:username,password:password};var postRequest=function postRequest(){var result,data;return _regeneratorRuntime.async(function postRequest$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(axios.post('https://traveler-backend.herokuapp.com/users',newUser));case 2:result=_context.sent;data=result.data;if(!data.error){localStorage.setItem(\"token\",data.jwt);dispatch(toggleLogin(true));dispatch(setUserID(data.id));dispatch(toggleError(''));dispatch(toggleDropdown(false));dispatch(toggleForm(''));}else{dispatch(toggleError('Username Already Taken'));}case 5:case\"end\":return _context.stop();}}});};postRequest();};}","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/traveler_frontend/src/actions/signUp.js"],"names":["axios","setUserID","toggleError","toggleLogin","toggleDropdown","toggleForm","signUp","username","password","dispatch","newUser","postRequest","post","result","data","error","localStorage","setItem","jwt","id"],"mappings":"wHAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,gBAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,kBAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,kBAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,qBAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,iBAAvB,CAIA,cAAe,SAASC,CAAAA,MAAT,CAAgBC,QAAhB,CAA0BC,QAA1B,CAAoC,CAC/C,MAAO,UAAAC,QAAQ,CAAI,CACf,GAAMC,CAAAA,OAAO,CAAG,CACZH,QAAQ,CAAEA,QADE,CAEZC,QAAQ,CAAEA,QAFE,CAAhB,CAIA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,yLACKX,KAAK,CAACY,IAAN,CAAW,8CAAX,CAA2DF,OAA3D,CADL,SACVG,MADU,eAETC,IAFS,CAEDD,MAFC,CAETC,IAFS,CAGhB,GAAI,CAACA,IAAI,CAACC,KAAV,CAAiB,CACbC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BH,IAAI,CAACI,GAAnC,EACAT,QAAQ,CAACN,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAM,QAAQ,CAACR,SAAS,CAACa,IAAI,CAACK,EAAN,CAAV,CAAR,CACAV,QAAQ,CAACP,WAAW,CAAC,EAAD,CAAZ,CAAR,CACAO,QAAQ,CAACL,cAAc,CAAC,KAAD,CAAf,CAAR,CACAK,QAAQ,CAACJ,UAAU,CAAC,EAAD,CAAX,CAAR,CACH,CAPD,IAOO,CACHI,QAAQ,CAACP,WAAW,CAAC,wBAAD,CAAZ,CAAR,CACH,CAZe,8CAApB,CAcAS,WAAW,GACd,CApBD,CAqBH","sourcesContent":["import axios from 'axios'\nimport setUserID from './setUserID.js'\nimport toggleError from './toggleError.js'\nimport toggleLogin from './toggleLogin.js';\nimport toggleDropdown from './toggleDropdown.js';\nimport toggleForm from './toggleForm.js';\n\n\n\nexport default function signUp(username, password) {\n    return dispatch => {\n        const newUser = {\n            username: username,\n            password: password\n        }\n        const postRequest = async() => {\n            const result = await axios.post('https://traveler-backend.herokuapp.com/users', newUser);\n            const {data} = result;\n            if (!data.error) {\n                localStorage.setItem(\"token\", data.jwt)\n                dispatch(toggleLogin(true));\n                dispatch(setUserID(data.id));\n                dispatch(toggleError(''));\n                dispatch(toggleDropdown(false));\n                dispatch(toggleForm(''));\n            } else {\n                dispatch(toggleError('Username Already Taken'));\n            }\n        }\n        postRequest();\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}