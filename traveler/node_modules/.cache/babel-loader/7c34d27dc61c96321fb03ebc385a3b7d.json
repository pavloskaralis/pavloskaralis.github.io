{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pavloskaralis/Desktop/pavloskaralis.github.io/traveler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pavloskaralis/Desktop/pavloskaralis.github.io/traveler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Users/pavloskaralis/Desktop/pavloskaralis.github.io/traveler/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import axios from'axios';import addSchedulingRow from'./addSchedulingRow.js';import selectPlanningRow from'./selectPlanningRow.js';import toggleForm from'./toggleForm.js';export default function postSchedulingRow(itineraryID,date){var time=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';var planningRow=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};return function(dispatch){var schedulingRow=_objectSpread(_objectSpread({},planningRow),{},{date:date,time:time});delete schedulingRow.interest;delete schedulingRow.id;delete schedulingRow.created_at;delete schedulingRow.updated_at;var postRequest=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.post(\"https://traveler-backend.herokuapp.com/itineraries/\".concat(itineraryID,\"/scheduling_rows\"),schedulingRow);case 2:result=_context.sent;data=result.data;if(!data.error){dispatch(addSchedulingRow(data.scheduling_row));dispatch(selectPlanningRow(''));dispatch(toggleForm(''));}else{console.log('Failed To Create');}case 5:case\"end\":return _context.stop();}}},_callee);}));return function postRequest(){return _ref.apply(this,arguments);};}();postRequest();};}","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/pavloskaralis.github.io/traveler/src/actions/postSchedulingRow.js"],"names":["axios","addSchedulingRow","selectPlanningRow","toggleForm","postSchedulingRow","itineraryID","date","time","planningRow","dispatch","schedulingRow","interest","id","created_at","updated_at","postRequest","post","result","data","error","scheduling_row","console","log"],"mappings":"whBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,uBAA7B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,wBAA9B,CACA,MAAOC,CAAAA,UAAP,KAAuB,iBAAvB,CAEA,cAAe,SAASC,CAAAA,iBAAT,CAA2BC,WAA3B,CAAwCC,IAAxC,CAA2E,IAA7BC,CAAAA,IAA6B,2DAAtB,EAAsB,IAAlBC,CAAAA,WAAkB,2DAAJ,EAAI,CAEtF,MAAO,UAAAC,QAAQ,CAAI,CACf,GAAMC,CAAAA,aAAa,gCAAOF,WAAP,MAAoBF,IAAI,CAAEA,IAA1B,CAAgCC,IAAI,CAAEA,IAAtC,EAAnB,CACA,MAAOG,CAAAA,aAAa,CAACC,QAArB,CACA,MAAOD,CAAAA,aAAa,CAACE,EAArB,CACA,MAAOF,CAAAA,aAAa,CAACG,UAArB,CACA,MAAOH,CAAAA,aAAa,CAACI,UAArB,CAEA,GAAMC,CAAAA,WAAW,0FAAG,yKACKf,CAAAA,KAAK,CAACgB,IAAN,8DAAiEX,WAAjE,qBAAgGK,aAAhG,CADL,QACVO,MADU,eAETC,IAFS,CAEDD,MAFC,CAETC,IAFS,CAGhB,GAAI,CAACA,IAAI,CAACC,KAAV,CAAiB,CACbV,QAAQ,CAACR,gBAAgB,CAACiB,IAAI,CAACE,cAAN,CAAjB,CAAR,CACAX,QAAQ,CAACP,iBAAiB,CAAC,EAAD,CAAlB,CAAR,CACAO,QAAQ,CAACN,UAAU,CAAC,EAAD,CAAX,CAAR,CACH,CAJD,IAIO,CACHkB,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACH,CATe,sDAAH,kBAAXP,CAAAA,WAAW,0CAAjB,CAWAA,WAAW,GACd,CAnBD,CAoBH","sourcesContent":["import axios from 'axios'\nimport addSchedulingRow from './addSchedulingRow.js';\nimport selectPlanningRow from './selectPlanningRow.js'\nimport toggleForm from './toggleForm.js'\n\nexport default function postSchedulingRow(itineraryID, date, time = '', planningRow = {}) {\n\n    return dispatch => {\n        const schedulingRow = {...planningRow, date: date, time: time}\n        delete schedulingRow.interest;\n        delete schedulingRow.id;\n        delete schedulingRow.created_at;\n        delete schedulingRow.updated_at;\n\n        const postRequest = async () => {\n            const result = await axios.post(`https://traveler-backend.herokuapp.com/itineraries/${itineraryID}/scheduling_rows`, schedulingRow);\n            const {data} = result;\n            if (!data.error) {\n                dispatch(addSchedulingRow(data.scheduling_row));\n                dispatch(selectPlanningRow(''))\n                dispatch(toggleForm(''));\n            } else {\n                console.log('Failed To Create')\n            }\n        }\n        postRequest();\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}