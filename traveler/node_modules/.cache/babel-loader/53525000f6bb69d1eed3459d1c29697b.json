{"ast":null,"code":"import axios from 'axios';\nimport history from '../history.js';\nimport toggleForm from './toggleForm.js';\nimport selectItinerary from './selectItinerary.js';\nimport removeItinerary from './removeItinerary.js';\nexport default function deleteItinerary(itinerary, userID) {\n  return dispatch => {\n    const removeRequests = async () => {\n      const result = await axios.delete(`https://traveler-backend.herokuapp.com/lookups/${userID}/${itinerary.id}`);\n      const data = result.data;\n\n      if (!data.error) {\n        history.push('/');\n        dispatch(toggleForm(''));\n        dispatch(selectItinerary(''));\n        dispatch(removeItinerary(itinerary.id));\n      } else {\n        console.log('Failed To Remove');\n      }\n    };\n\n    const deleteRequest = async () => {\n      const result = await axios.delete(`https://traveler-backend.herokuapp.com/itineraries/${itinerary.id}`);\n      const data = result.data;\n\n      if (!data.error) {\n        history.push('/');\n        dispatch(toggleForm(''));\n        dispatch(selectItinerary(''));\n        dispatch(removeItinerary(itinerary.id));\n      } else {\n        console.log('Failed To Delete');\n      }\n    }; //only delete if no other user has acces; otherwise remove individual user and their interests\n\n\n    itinerary.usernames.length === 1 ? deleteRequest() : removeRequests();\n  };\n}","map":{"version":3,"sources":["/Users/pavloskaralis/Desktop/traveler_frontend/src/actions/deleteItinerary.js"],"names":["axios","history","toggleForm","selectItinerary","removeItinerary","deleteItinerary","itinerary","userID","dispatch","removeRequests","result","delete","id","data","error","push","console","log","deleteRequest","usernames","length"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AAEA,eAAe,SAASC,eAAT,CAAyBC,SAAzB,EAAoCC,MAApC,EAA4C;AACvD,SAAOC,QAAQ,IAAI;AAGf,UAAMC,cAAc,GAAG,YAAY;AAC/B,YAAMC,MAAM,GAAG,MAAMV,KAAK,CAACW,MAAN,CAAc,kDAAiDJ,MAAO,IAAGD,SAAS,CAACM,EAAG,EAAtF,CAArB;AAD+B,YAExBC,IAFwB,GAEhBH,MAFgB,CAExBG,IAFwB;;AAG/B,UAAG,CAACA,IAAI,CAACC,KAAT,EAAe;AACXb,QAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACAP,QAAAA,QAAQ,CAACN,UAAU,CAAC,EAAD,CAAX,CAAR;AACAM,QAAAA,QAAQ,CAACL,eAAe,CAAC,EAAD,CAAhB,CAAR;AACAK,QAAAA,QAAQ,CAACJ,eAAe,CAACE,SAAS,CAACM,EAAX,CAAhB,CAAR;AACH,OALD,MAKO;AACHI,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ,KAXD;;AAcA,UAAMC,aAAa,GAAG,YAAY;AAC9B,YAAMR,MAAM,GAAG,MAAMV,KAAK,CAACW,MAAN,CAAc,sDAAqDL,SAAS,CAACM,EAAG,EAAhF,CAArB;AAD8B,YAEvBC,IAFuB,GAEfH,MAFe,CAEvBG,IAFuB;;AAG9B,UAAG,CAACA,IAAI,CAACC,KAAT,EAAe;AACXb,QAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACAP,QAAAA,QAAQ,CAACN,UAAU,CAAC,EAAD,CAAX,CAAR;AACAM,QAAAA,QAAQ,CAACL,eAAe,CAAC,EAAD,CAAhB,CAAR;AACAK,QAAAA,QAAQ,CAACJ,eAAe,CAACE,SAAS,CAACM,EAAX,CAAhB,CAAR;AACH,OALD,MAKO;AACHI,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ,KAXD,CAjBe,CA8Bf;;;AACAX,IAAAA,SAAS,CAACa,SAAV,CAAoBC,MAApB,KAA+B,CAA/B,GAAmCF,aAAa,EAAhD,GAAqDT,cAAc,EAAnE;AACH,GAhCD;AAiCH","sourcesContent":["import axios from 'axios'\nimport history from '../history.js'\nimport toggleForm from './toggleForm.js'\nimport selectItinerary from './selectItinerary.js'\nimport removeItinerary from './removeItinerary.js'\n\nexport default function deleteItinerary(itinerary, userID) {\n    return dispatch => {\n        \n        \n        const removeRequests = async () => {\n            const result = await axios.delete(`https://traveler-backend.herokuapp.com/lookups/${userID}/${itinerary.id}`); \n            const {data} = result;     \n            if(!data.error){\n                history.push('/');\n                dispatch(toggleForm(''));\n                dispatch(selectItinerary(''));\n                dispatch(removeItinerary(itinerary.id));\n            } else {               \n                console.log('Failed To Remove')\n            }  \n        }\n\n\n        const deleteRequest = async () => {\n            const result = await axios.delete(`https://traveler-backend.herokuapp.com/itineraries/${itinerary.id}`);  \n            const {data} = result;  \n            if(!data.error){\n                history.push('/');\n                dispatch(toggleForm(''));\n                dispatch(selectItinerary(''));\n                dispatch(removeItinerary(itinerary.id));\n            } else {               \n                console.log('Failed To Delete')\n            }  \n        }\n\n        //only delete if no other user has acces; otherwise remove individual user and their interests\n        itinerary.usernames.length === 1 ? deleteRequest() : removeRequests();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}